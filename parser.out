Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Header Code
Rule 2     Program -> Code
Rule 3     Header -> Header Decl
Rule 4     Header -> Decl
Rule 5     Decl -> VAR NameList
Rule 6     NameList -> NAME
Rule 7     NameList -> NameList , NAME
Rule 8     Decl -> VAR NAME [ NUM ]
Rule 9     Decl -> VAR NAME [ NUM ] [ NUM ]
Rule 10    Code -> Code Codes
Rule 11    Code -> Codes
Rule 12    Codes -> Conditions
Rule 13    Codes -> WhileDo
Rule 14    Codes -> RepeatUntil
Rule 15    Codes -> Assign
Rule 16    Codes -> Print
Rule 17    Conditions -> IF ( Condition ) THEN { Code }
Rule 18    Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code }
Rule 19    WhileDo -> WHILE ( Condition ) DO { Code }
Rule 20    RepeatUntil -> REPEAT { Code } UNTIL ( Condition )
Rule 21    Assign -> NAME = Expr
Rule 22    Assign -> NAME [ Expr ] = Expr
Rule 23    Assign -> NAME [ Expr ] [ Expr ] = Expr
Rule 24    Expr -> Condition
Rule 25    Expr -> Variable
Rule 26    Expr -> NUM
Rule 27    Expr -> Expr + Expr
Rule 28    Expr -> Expr - Expr
Rule 29    Expr -> Expr * Expr
Rule 30    Expr -> Expr / Expr
Rule 31    Expr -> Expr % Expr
Rule 32    Condition -> Expr EQ Expr
Rule 33    Condition -> Expr NEQ Expr
Rule 34    Condition -> ! Expr
Rule 35    Condition -> Expr > Expr
Rule 36    Condition -> Expr MOREEQ Expr
Rule 37    Condition -> Expr < Expr
Rule 38    Condition -> Expr LESSEQ Expr
Rule 39    Condition -> Expr AND Expr
Rule 40    Condition -> Expr OR Expr
Rule 41    Expr -> ( Expr )
Rule 42    Condition -> ( Condition )
Rule 43    Variable -> NAME
Rule 44    Variable -> NAME [ Expr ]
Rule 45    Variable -> NAME [ Expr ] [ Expr ]
Rule 46    Assign -> NAME [ Expr ] = INPUT
Rule 47    Assign -> NAME [ Expr ] [ Expr ] = INPUT
Rule 48    Assign -> NAME = INPUT
Rule 49    Print -> PRINT Expr
Rule 50    Print -> PRINT NAME

Terminals, with rules where they appear

!                    : 34
%                    : 31
(                    : 17 18 19 20 41 42
)                    : 17 18 19 20 41 42
*                    : 29
+                    : 27
,                    : 7
-                    : 28
/                    : 30
<                    : 37
=                    : 21 22 23 46 47 48
>                    : 35
AND                  : 39
DO                   : 19
EQ                   : 32
IF                   : 17 18
INPUT                : 46 47 48
LESSEQ               : 38
MOREEQ               : 36
NAME                 : 6 7 8 9 21 22 23 43 44 45 46 47 48 50
NEQ                  : 33
NUM                  : 8 9 9 26
OR                   : 40
OTHERWISE            : 18
PRINT                : 49 50
REPEAT               : 20
THEN                 : 17 18
UNTIL                : 20
VAR                  : 5 8 9
WHILE                : 19
[                    : 8 9 9 22 23 23 44 45 45 46 47 47
]                    : 8 9 9 22 23 23 44 45 45 46 47 47
error                : 
{                    : 17 18 18 19 20
}                    : 17 18 18 19 20

Nonterminals, with rules where they appear

Assign               : 15
Code                 : 1 2 10 17 18 18 19 20
Codes                : 10 11
Condition            : 17 18 19 20 24 42
Conditions           : 12
Decl                 : 3 4
Expr                 : 21 22 22 23 23 23 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35 35 36 36 37 37 38 38 39 39 40 40 41 44 45 45 46 47 47 49
Header               : 1 3
NameList             : 5 7
Print                : 16
Program              : 0
RepeatUntil          : 14
Variable             : 25
WhileDo              : 13

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Header Code
    (2) Program -> . Code
    (3) Header -> . Header Decl
    (4) Header -> . Decl
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (5) Decl -> . VAR NameList
    (8) Decl -> . VAR NAME [ NUM ]
    (9) Decl -> . VAR NAME [ NUM ] [ NUM ]
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    VAR             shift and go to state 6
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Program                        shift and go to state 1
    Header                         shift and go to state 2
    Code                           shift and go to state 3
    Decl                           shift and go to state 4
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 1

    (0) S' -> Program .



state 2

    (1) Program -> Header . Code
    (3) Header -> Header . Decl
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (5) Decl -> . VAR NameList
    (8) Decl -> . VAR NAME [ NUM ]
    (9) Decl -> . VAR NAME [ NUM ] [ NUM ]
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    VAR             shift and go to state 6
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 17
    Decl                           shift and go to state 18
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 3

    (2) Program -> Code .
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    $end            reduce using rule 2 (Program -> Code .)
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 4

    (4) Header -> Decl .

    VAR             reduce using rule 4 (Header -> Decl .)
    IF              reduce using rule 4 (Header -> Decl .)
    WHILE           reduce using rule 4 (Header -> Decl .)
    REPEAT          reduce using rule 4 (Header -> Decl .)
    NAME            reduce using rule 4 (Header -> Decl .)
    PRINT           reduce using rule 4 (Header -> Decl .)


state 5

    (11) Code -> Codes .

    IF              reduce using rule 11 (Code -> Codes .)
    WHILE           reduce using rule 11 (Code -> Codes .)
    REPEAT          reduce using rule 11 (Code -> Codes .)
    NAME            reduce using rule 11 (Code -> Codes .)
    PRINT           reduce using rule 11 (Code -> Codes .)
    $end            reduce using rule 11 (Code -> Codes .)
    }               reduce using rule 11 (Code -> Codes .)


state 6

    (5) Decl -> VAR . NameList
    (8) Decl -> VAR . NAME [ NUM ]
    (9) Decl -> VAR . NAME [ NUM ] [ NUM ]
    (6) NameList -> . NAME
    (7) NameList -> . NameList , NAME

    NAME            shift and go to state 21

    NameList                       shift and go to state 20

state 7

    (21) Assign -> NAME . = Expr
    (22) Assign -> NAME . [ Expr ] = Expr
    (23) Assign -> NAME . [ Expr ] [ Expr ] = Expr
    (46) Assign -> NAME . [ Expr ] = INPUT
    (47) Assign -> NAME . [ Expr ] [ Expr ] = INPUT
    (48) Assign -> NAME . = INPUT

    =               shift and go to state 22
    [               shift and go to state 23


state 8

    (12) Codes -> Conditions .

    IF              reduce using rule 12 (Codes -> Conditions .)
    WHILE           reduce using rule 12 (Codes -> Conditions .)
    REPEAT          reduce using rule 12 (Codes -> Conditions .)
    NAME            reduce using rule 12 (Codes -> Conditions .)
    PRINT           reduce using rule 12 (Codes -> Conditions .)
    $end            reduce using rule 12 (Codes -> Conditions .)
    }               reduce using rule 12 (Codes -> Conditions .)


state 9

    (13) Codes -> WhileDo .

    IF              reduce using rule 13 (Codes -> WhileDo .)
    WHILE           reduce using rule 13 (Codes -> WhileDo .)
    REPEAT          reduce using rule 13 (Codes -> WhileDo .)
    NAME            reduce using rule 13 (Codes -> WhileDo .)
    PRINT           reduce using rule 13 (Codes -> WhileDo .)
    $end            reduce using rule 13 (Codes -> WhileDo .)
    }               reduce using rule 13 (Codes -> WhileDo .)


state 10

    (14) Codes -> RepeatUntil .

    IF              reduce using rule 14 (Codes -> RepeatUntil .)
    WHILE           reduce using rule 14 (Codes -> RepeatUntil .)
    REPEAT          reduce using rule 14 (Codes -> RepeatUntil .)
    NAME            reduce using rule 14 (Codes -> RepeatUntil .)
    PRINT           reduce using rule 14 (Codes -> RepeatUntil .)
    $end            reduce using rule 14 (Codes -> RepeatUntil .)
    }               reduce using rule 14 (Codes -> RepeatUntil .)


state 11

    (15) Codes -> Assign .

    IF              reduce using rule 15 (Codes -> Assign .)
    WHILE           reduce using rule 15 (Codes -> Assign .)
    REPEAT          reduce using rule 15 (Codes -> Assign .)
    NAME            reduce using rule 15 (Codes -> Assign .)
    PRINT           reduce using rule 15 (Codes -> Assign .)
    $end            reduce using rule 15 (Codes -> Assign .)
    }               reduce using rule 15 (Codes -> Assign .)


state 12

    (16) Codes -> Print .

    IF              reduce using rule 16 (Codes -> Print .)
    WHILE           reduce using rule 16 (Codes -> Print .)
    REPEAT          reduce using rule 16 (Codes -> Print .)
    NAME            reduce using rule 16 (Codes -> Print .)
    PRINT           reduce using rule 16 (Codes -> Print .)
    $end            reduce using rule 16 (Codes -> Print .)
    }               reduce using rule 16 (Codes -> Print .)


state 13

    (17) Conditions -> IF . ( Condition ) THEN { Code }
    (18) Conditions -> IF . ( Condition ) THEN { Code } OTHERWISE { Code }

    (               shift and go to state 24


state 14

    (19) WhileDo -> WHILE . ( Condition ) DO { Code }

    (               shift and go to state 25


state 15

    (20) RepeatUntil -> REPEAT . { Code } UNTIL ( Condition )

    {               shift and go to state 26


state 16

    (49) Print -> PRINT . Expr
    (50) Print -> PRINT . NAME
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NAME            shift and go to state 28
    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33

    Expr                           shift and go to state 27
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 17

    (1) Program -> Header Code .
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    $end            reduce using rule 1 (Program -> Header Code .)
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 18

    (3) Header -> Header Decl .

    VAR             reduce using rule 3 (Header -> Header Decl .)
    IF              reduce using rule 3 (Header -> Header Decl .)
    WHILE           reduce using rule 3 (Header -> Header Decl .)
    REPEAT          reduce using rule 3 (Header -> Header Decl .)
    NAME            reduce using rule 3 (Header -> Header Decl .)
    PRINT           reduce using rule 3 (Header -> Header Decl .)


state 19

    (10) Code -> Code Codes .

    IF              reduce using rule 10 (Code -> Code Codes .)
    WHILE           reduce using rule 10 (Code -> Code Codes .)
    REPEAT          reduce using rule 10 (Code -> Code Codes .)
    NAME            reduce using rule 10 (Code -> Code Codes .)
    PRINT           reduce using rule 10 (Code -> Code Codes .)
    $end            reduce using rule 10 (Code -> Code Codes .)
    }               reduce using rule 10 (Code -> Code Codes .)


state 20

    (5) Decl -> VAR NameList .
    (7) NameList -> NameList . , NAME

    VAR             reduce using rule 5 (Decl -> VAR NameList .)
    IF              reduce using rule 5 (Decl -> VAR NameList .)
    WHILE           reduce using rule 5 (Decl -> VAR NameList .)
    REPEAT          reduce using rule 5 (Decl -> VAR NameList .)
    NAME            reduce using rule 5 (Decl -> VAR NameList .)
    PRINT           reduce using rule 5 (Decl -> VAR NameList .)
    ,               shift and go to state 34


state 21

    (8) Decl -> VAR NAME . [ NUM ]
    (9) Decl -> VAR NAME . [ NUM ] [ NUM ]
    (6) NameList -> NAME .

    [               shift and go to state 35
    ,               reduce using rule 6 (NameList -> NAME .)
    VAR             reduce using rule 6 (NameList -> NAME .)
    IF              reduce using rule 6 (NameList -> NAME .)
    WHILE           reduce using rule 6 (NameList -> NAME .)
    REPEAT          reduce using rule 6 (NameList -> NAME .)
    NAME            reduce using rule 6 (NameList -> NAME .)
    PRINT           reduce using rule 6 (NameList -> NAME .)


state 22

    (21) Assign -> NAME = . Expr
    (48) Assign -> NAME = . INPUT
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    INPUT           shift and go to state 38
    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 37
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 23

    (22) Assign -> NAME [ . Expr ] = Expr
    (23) Assign -> NAME [ . Expr ] [ Expr ] = Expr
    (46) Assign -> NAME [ . Expr ] = INPUT
    (47) Assign -> NAME [ . Expr ] [ Expr ] = INPUT
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 39
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 24

    (17) Conditions -> IF ( . Condition ) THEN { Code }
    (18) Conditions -> IF ( . Condition ) THEN { Code } OTHERWISE { Code }
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 40
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 41
    Expr                           shift and go to state 42
    Variable                       shift and go to state 30

state 25

    (19) WhileDo -> WHILE ( . Condition ) DO { Code }
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 40
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 43
    Expr                           shift and go to state 42
    Variable                       shift and go to state 30

state 26

    (20) RepeatUntil -> REPEAT { . Code } UNTIL ( Condition )
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 44
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 27

    (49) Print -> PRINT Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    IF              reduce using rule 49 (Print -> PRINT Expr .)
    WHILE           reduce using rule 49 (Print -> PRINT Expr .)
    REPEAT          reduce using rule 49 (Print -> PRINT Expr .)
    NAME            reduce using rule 49 (Print -> PRINT Expr .)
    PRINT           reduce using rule 49 (Print -> PRINT Expr .)
    $end            reduce using rule 49 (Print -> PRINT Expr .)
    }               reduce using rule 49 (Print -> PRINT Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 28

    (50) Print -> PRINT NAME .
    (43) Variable -> NAME .
    (44) Variable -> NAME . [ Expr ]
    (45) Variable -> NAME . [ Expr ] [ Expr ]

  ! reduce/reduce conflict for IF resolved using rule 43 (Variable -> NAME .)
  ! reduce/reduce conflict for WHILE resolved using rule 43 (Variable -> NAME .)
  ! reduce/reduce conflict for REPEAT resolved using rule 43 (Variable -> NAME .)
  ! reduce/reduce conflict for NAME resolved using rule 43 (Variable -> NAME .)
  ! reduce/reduce conflict for PRINT resolved using rule 43 (Variable -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 43 (Variable -> NAME .)
  ! reduce/reduce conflict for } resolved using rule 43 (Variable -> NAME .)
    +               reduce using rule 43 (Variable -> NAME .)
    -               reduce using rule 43 (Variable -> NAME .)
    *               reduce using rule 43 (Variable -> NAME .)
    /               reduce using rule 43 (Variable -> NAME .)
    %               reduce using rule 43 (Variable -> NAME .)
    EQ              reduce using rule 43 (Variable -> NAME .)
    NEQ             reduce using rule 43 (Variable -> NAME .)
    >               reduce using rule 43 (Variable -> NAME .)
    MOREEQ          reduce using rule 43 (Variable -> NAME .)
    <               reduce using rule 43 (Variable -> NAME .)
    LESSEQ          reduce using rule 43 (Variable -> NAME .)
    AND             reduce using rule 43 (Variable -> NAME .)
    OR              reduce using rule 43 (Variable -> NAME .)
    IF              reduce using rule 43 (Variable -> NAME .)
    WHILE           reduce using rule 43 (Variable -> NAME .)
    REPEAT          reduce using rule 43 (Variable -> NAME .)
    NAME            reduce using rule 43 (Variable -> NAME .)
    PRINT           reduce using rule 43 (Variable -> NAME .)
    $end            reduce using rule 43 (Variable -> NAME .)
    }               reduce using rule 43 (Variable -> NAME .)
    [               shift and go to state 58

  ! IF              [ reduce using rule 50 (Print -> PRINT NAME .) ]
  ! WHILE           [ reduce using rule 50 (Print -> PRINT NAME .) ]
  ! REPEAT          [ reduce using rule 50 (Print -> PRINT NAME .) ]
  ! NAME            [ reduce using rule 50 (Print -> PRINT NAME .) ]
  ! PRINT           [ reduce using rule 50 (Print -> PRINT NAME .) ]
  ! $end            [ reduce using rule 50 (Print -> PRINT NAME .) ]
  ! }               [ reduce using rule 50 (Print -> PRINT NAME .) ]


state 29

    (24) Expr -> Condition .

    +               reduce using rule 24 (Expr -> Condition .)
    -               reduce using rule 24 (Expr -> Condition .)
    *               reduce using rule 24 (Expr -> Condition .)
    /               reduce using rule 24 (Expr -> Condition .)
    %               reduce using rule 24 (Expr -> Condition .)
    EQ              reduce using rule 24 (Expr -> Condition .)
    NEQ             reduce using rule 24 (Expr -> Condition .)
    >               reduce using rule 24 (Expr -> Condition .)
    MOREEQ          reduce using rule 24 (Expr -> Condition .)
    <               reduce using rule 24 (Expr -> Condition .)
    LESSEQ          reduce using rule 24 (Expr -> Condition .)
    AND             reduce using rule 24 (Expr -> Condition .)
    OR              reduce using rule 24 (Expr -> Condition .)
    IF              reduce using rule 24 (Expr -> Condition .)
    WHILE           reduce using rule 24 (Expr -> Condition .)
    REPEAT          reduce using rule 24 (Expr -> Condition .)
    NAME            reduce using rule 24 (Expr -> Condition .)
    PRINT           reduce using rule 24 (Expr -> Condition .)
    $end            reduce using rule 24 (Expr -> Condition .)
    }               reduce using rule 24 (Expr -> Condition .)
    ]               reduce using rule 24 (Expr -> Condition .)
    )               reduce using rule 24 (Expr -> Condition .)


state 30

    (25) Expr -> Variable .

    +               reduce using rule 25 (Expr -> Variable .)
    -               reduce using rule 25 (Expr -> Variable .)
    *               reduce using rule 25 (Expr -> Variable .)
    /               reduce using rule 25 (Expr -> Variable .)
    %               reduce using rule 25 (Expr -> Variable .)
    EQ              reduce using rule 25 (Expr -> Variable .)
    NEQ             reduce using rule 25 (Expr -> Variable .)
    >               reduce using rule 25 (Expr -> Variable .)
    MOREEQ          reduce using rule 25 (Expr -> Variable .)
    <               reduce using rule 25 (Expr -> Variable .)
    LESSEQ          reduce using rule 25 (Expr -> Variable .)
    AND             reduce using rule 25 (Expr -> Variable .)
    OR              reduce using rule 25 (Expr -> Variable .)
    IF              reduce using rule 25 (Expr -> Variable .)
    WHILE           reduce using rule 25 (Expr -> Variable .)
    REPEAT          reduce using rule 25 (Expr -> Variable .)
    NAME            reduce using rule 25 (Expr -> Variable .)
    PRINT           reduce using rule 25 (Expr -> Variable .)
    $end            reduce using rule 25 (Expr -> Variable .)
    }               reduce using rule 25 (Expr -> Variable .)
    ]               reduce using rule 25 (Expr -> Variable .)
    )               reduce using rule 25 (Expr -> Variable .)


state 31

    (26) Expr -> NUM .

    +               reduce using rule 26 (Expr -> NUM .)
    -               reduce using rule 26 (Expr -> NUM .)
    *               reduce using rule 26 (Expr -> NUM .)
    /               reduce using rule 26 (Expr -> NUM .)
    %               reduce using rule 26 (Expr -> NUM .)
    EQ              reduce using rule 26 (Expr -> NUM .)
    NEQ             reduce using rule 26 (Expr -> NUM .)
    >               reduce using rule 26 (Expr -> NUM .)
    MOREEQ          reduce using rule 26 (Expr -> NUM .)
    <               reduce using rule 26 (Expr -> NUM .)
    LESSEQ          reduce using rule 26 (Expr -> NUM .)
    AND             reduce using rule 26 (Expr -> NUM .)
    OR              reduce using rule 26 (Expr -> NUM .)
    IF              reduce using rule 26 (Expr -> NUM .)
    WHILE           reduce using rule 26 (Expr -> NUM .)
    REPEAT          reduce using rule 26 (Expr -> NUM .)
    NAME            reduce using rule 26 (Expr -> NUM .)
    PRINT           reduce using rule 26 (Expr -> NUM .)
    $end            reduce using rule 26 (Expr -> NUM .)
    }               reduce using rule 26 (Expr -> NUM .)
    ]               reduce using rule 26 (Expr -> NUM .)
    )               reduce using rule 26 (Expr -> NUM .)


state 32

    (41) Expr -> ( . Expr )
    (42) Condition -> ( . Condition )
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 59
    Condition                      shift and go to state 60
    Variable                       shift and go to state 30

state 33

    (34) Condition -> ! . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 61
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 34

    (7) NameList -> NameList , . NAME

    NAME            shift and go to state 62


state 35

    (8) Decl -> VAR NAME [ . NUM ]
    (9) Decl -> VAR NAME [ . NUM ] [ NUM ]

    NUM             shift and go to state 63


state 36

    (43) Variable -> NAME .
    (44) Variable -> NAME . [ Expr ]
    (45) Variable -> NAME . [ Expr ] [ Expr ]

    +               reduce using rule 43 (Variable -> NAME .)
    -               reduce using rule 43 (Variable -> NAME .)
    *               reduce using rule 43 (Variable -> NAME .)
    /               reduce using rule 43 (Variable -> NAME .)
    %               reduce using rule 43 (Variable -> NAME .)
    EQ              reduce using rule 43 (Variable -> NAME .)
    NEQ             reduce using rule 43 (Variable -> NAME .)
    >               reduce using rule 43 (Variable -> NAME .)
    MOREEQ          reduce using rule 43 (Variable -> NAME .)
    <               reduce using rule 43 (Variable -> NAME .)
    LESSEQ          reduce using rule 43 (Variable -> NAME .)
    AND             reduce using rule 43 (Variable -> NAME .)
    OR              reduce using rule 43 (Variable -> NAME .)
    IF              reduce using rule 43 (Variable -> NAME .)
    WHILE           reduce using rule 43 (Variable -> NAME .)
    REPEAT          reduce using rule 43 (Variable -> NAME .)
    NAME            reduce using rule 43 (Variable -> NAME .)
    PRINT           reduce using rule 43 (Variable -> NAME .)
    $end            reduce using rule 43 (Variable -> NAME .)
    }               reduce using rule 43 (Variable -> NAME .)
    ]               reduce using rule 43 (Variable -> NAME .)
    )               reduce using rule 43 (Variable -> NAME .)
    [               shift and go to state 58


state 37

    (21) Assign -> NAME = Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    IF              reduce using rule 21 (Assign -> NAME = Expr .)
    WHILE           reduce using rule 21 (Assign -> NAME = Expr .)
    REPEAT          reduce using rule 21 (Assign -> NAME = Expr .)
    NAME            reduce using rule 21 (Assign -> NAME = Expr .)
    PRINT           reduce using rule 21 (Assign -> NAME = Expr .)
    $end            reduce using rule 21 (Assign -> NAME = Expr .)
    }               reduce using rule 21 (Assign -> NAME = Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 38

    (48) Assign -> NAME = INPUT .

    IF              reduce using rule 48 (Assign -> NAME = INPUT .)
    WHILE           reduce using rule 48 (Assign -> NAME = INPUT .)
    REPEAT          reduce using rule 48 (Assign -> NAME = INPUT .)
    NAME            reduce using rule 48 (Assign -> NAME = INPUT .)
    PRINT           reduce using rule 48 (Assign -> NAME = INPUT .)
    $end            reduce using rule 48 (Assign -> NAME = INPUT .)
    }               reduce using rule 48 (Assign -> NAME = INPUT .)


state 39

    (22) Assign -> NAME [ Expr . ] = Expr
    (23) Assign -> NAME [ Expr . ] [ Expr ] = Expr
    (46) Assign -> NAME [ Expr . ] = INPUT
    (47) Assign -> NAME [ Expr . ] [ Expr ] = INPUT
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    ]               shift and go to state 64
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 40

    (42) Condition -> ( . Condition )
    (41) Expr -> ( . Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 40
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 60
    Expr                           shift and go to state 65
    Variable                       shift and go to state 30

state 41

    (17) Conditions -> IF ( Condition . ) THEN { Code }
    (18) Conditions -> IF ( Condition . ) THEN { Code } OTHERWISE { Code }
    (24) Expr -> Condition .

    )               shift and go to state 66
    EQ              reduce using rule 24 (Expr -> Condition .)
    NEQ             reduce using rule 24 (Expr -> Condition .)
    >               reduce using rule 24 (Expr -> Condition .)
    MOREEQ          reduce using rule 24 (Expr -> Condition .)
    <               reduce using rule 24 (Expr -> Condition .)
    LESSEQ          reduce using rule 24 (Expr -> Condition .)
    AND             reduce using rule 24 (Expr -> Condition .)
    OR              reduce using rule 24 (Expr -> Condition .)
    +               reduce using rule 24 (Expr -> Condition .)
    -               reduce using rule 24 (Expr -> Condition .)
    *               reduce using rule 24 (Expr -> Condition .)
    /               reduce using rule 24 (Expr -> Condition .)
    %               reduce using rule 24 (Expr -> Condition .)


state 42

    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr

    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49


state 43

    (19) WhileDo -> WHILE ( Condition . ) DO { Code }
    (24) Expr -> Condition .

    )               shift and go to state 67
    EQ              reduce using rule 24 (Expr -> Condition .)
    NEQ             reduce using rule 24 (Expr -> Condition .)
    >               reduce using rule 24 (Expr -> Condition .)
    MOREEQ          reduce using rule 24 (Expr -> Condition .)
    <               reduce using rule 24 (Expr -> Condition .)
    LESSEQ          reduce using rule 24 (Expr -> Condition .)
    AND             reduce using rule 24 (Expr -> Condition .)
    OR              reduce using rule 24 (Expr -> Condition .)
    +               reduce using rule 24 (Expr -> Condition .)
    -               reduce using rule 24 (Expr -> Condition .)
    *               reduce using rule 24 (Expr -> Condition .)
    /               reduce using rule 24 (Expr -> Condition .)
    %               reduce using rule 24 (Expr -> Condition .)


state 44

    (20) RepeatUntil -> REPEAT { Code . } UNTIL ( Condition )
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    }               shift and go to state 68
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 45

    (27) Expr -> Expr + . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 69
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 46

    (28) Expr -> Expr - . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 70
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 47

    (29) Expr -> Expr * . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 71
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 48

    (30) Expr -> Expr / . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 72
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 49

    (31) Expr -> Expr % . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 73
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 50

    (32) Condition -> Expr EQ . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 74
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 51

    (33) Condition -> Expr NEQ . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 75
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 52

    (35) Condition -> Expr > . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 76
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 53

    (36) Condition -> Expr MOREEQ . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 77
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 54

    (37) Condition -> Expr < . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 78
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 55

    (38) Condition -> Expr LESSEQ . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 79
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 56

    (39) Condition -> Expr AND . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 80
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 57

    (40) Condition -> Expr OR . Expr
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 81
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 58

    (44) Variable -> NAME [ . Expr ]
    (45) Variable -> NAME [ . Expr ] [ Expr ]
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 82
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 59

    (41) Expr -> ( Expr . )
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    )               shift and go to state 83
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 60

    (42) Condition -> ( Condition . )
    (24) Expr -> Condition .

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 84
    +               reduce using rule 24 (Expr -> Condition .)
    -               reduce using rule 24 (Expr -> Condition .)
    *               reduce using rule 24 (Expr -> Condition .)
    /               reduce using rule 24 (Expr -> Condition .)
    %               reduce using rule 24 (Expr -> Condition .)
    EQ              reduce using rule 24 (Expr -> Condition .)
    NEQ             reduce using rule 24 (Expr -> Condition .)
    >               reduce using rule 24 (Expr -> Condition .)
    MOREEQ          reduce using rule 24 (Expr -> Condition .)
    <               reduce using rule 24 (Expr -> Condition .)
    LESSEQ          reduce using rule 24 (Expr -> Condition .)
    AND             reduce using rule 24 (Expr -> Condition .)
    OR              reduce using rule 24 (Expr -> Condition .)

  ! )               [ reduce using rule 24 (Expr -> Condition .) ]


state 61

    (34) Condition -> ! Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 34 (Condition -> ! Expr .)
    WHILE           reduce using rule 34 (Condition -> ! Expr .)
    REPEAT          reduce using rule 34 (Condition -> ! Expr .)
    NAME            reduce using rule 34 (Condition -> ! Expr .)
    PRINT           reduce using rule 34 (Condition -> ! Expr .)
    $end            reduce using rule 34 (Condition -> ! Expr .)
    }               reduce using rule 34 (Condition -> ! Expr .)
    ]               reduce using rule 34 (Condition -> ! Expr .)
    )               reduce using rule 34 (Condition -> ! Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! -               [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! *               [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! /               [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! %               [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! EQ              [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! NEQ             [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! >               [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! MOREEQ          [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! <               [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! LESSEQ          [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! AND             [ reduce using rule 34 (Condition -> ! Expr .) ]
  ! OR              [ reduce using rule 34 (Condition -> ! Expr .) ]


state 62

    (7) NameList -> NameList , NAME .

    ,               reduce using rule 7 (NameList -> NameList , NAME .)
    VAR             reduce using rule 7 (NameList -> NameList , NAME .)
    IF              reduce using rule 7 (NameList -> NameList , NAME .)
    WHILE           reduce using rule 7 (NameList -> NameList , NAME .)
    REPEAT          reduce using rule 7 (NameList -> NameList , NAME .)
    NAME            reduce using rule 7 (NameList -> NameList , NAME .)
    PRINT           reduce using rule 7 (NameList -> NameList , NAME .)


state 63

    (8) Decl -> VAR NAME [ NUM . ]
    (9) Decl -> VAR NAME [ NUM . ] [ NUM ]

    ]               shift and go to state 85


state 64

    (22) Assign -> NAME [ Expr ] . = Expr
    (23) Assign -> NAME [ Expr ] . [ Expr ] = Expr
    (46) Assign -> NAME [ Expr ] . = INPUT
    (47) Assign -> NAME [ Expr ] . [ Expr ] = INPUT

    =               shift and go to state 87
    [               shift and go to state 86


state 65

    (41) Expr -> ( Expr . )
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr

    )               shift and go to state 83
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49


state 66

    (17) Conditions -> IF ( Condition ) . THEN { Code }
    (18) Conditions -> IF ( Condition ) . THEN { Code } OTHERWISE { Code }

    THEN            shift and go to state 88


state 67

    (19) WhileDo -> WHILE ( Condition ) . DO { Code }

    DO              shift and go to state 89


state 68

    (20) RepeatUntil -> REPEAT { Code } . UNTIL ( Condition )

    UNTIL           shift and go to state 90


state 69

    (27) Expr -> Expr + Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 27 (Expr -> Expr + Expr .)
    WHILE           reduce using rule 27 (Expr -> Expr + Expr .)
    REPEAT          reduce using rule 27 (Expr -> Expr + Expr .)
    NAME            reduce using rule 27 (Expr -> Expr + Expr .)
    PRINT           reduce using rule 27 (Expr -> Expr + Expr .)
    $end            reduce using rule 27 (Expr -> Expr + Expr .)
    }               reduce using rule 27 (Expr -> Expr + Expr .)
    ]               reduce using rule 27 (Expr -> Expr + Expr .)
    )               reduce using rule 27 (Expr -> Expr + Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! -               [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! *               [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! /               [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! %               [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! EQ              [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! NEQ             [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! >               [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! MOREEQ          [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! <               [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! LESSEQ          [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! AND             [ reduce using rule 27 (Expr -> Expr + Expr .) ]
  ! OR              [ reduce using rule 27 (Expr -> Expr + Expr .) ]


state 70

    (28) Expr -> Expr - Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 28 (Expr -> Expr - Expr .)
    WHILE           reduce using rule 28 (Expr -> Expr - Expr .)
    REPEAT          reduce using rule 28 (Expr -> Expr - Expr .)
    NAME            reduce using rule 28 (Expr -> Expr - Expr .)
    PRINT           reduce using rule 28 (Expr -> Expr - Expr .)
    $end            reduce using rule 28 (Expr -> Expr - Expr .)
    }               reduce using rule 28 (Expr -> Expr - Expr .)
    ]               reduce using rule 28 (Expr -> Expr - Expr .)
    )               reduce using rule 28 (Expr -> Expr - Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! -               [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! *               [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! /               [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! %               [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! EQ              [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! NEQ             [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! >               [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! MOREEQ          [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! <               [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! LESSEQ          [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! AND             [ reduce using rule 28 (Expr -> Expr - Expr .) ]
  ! OR              [ reduce using rule 28 (Expr -> Expr - Expr .) ]


state 71

    (29) Expr -> Expr * Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 29 (Expr -> Expr * Expr .)
    WHILE           reduce using rule 29 (Expr -> Expr * Expr .)
    REPEAT          reduce using rule 29 (Expr -> Expr * Expr .)
    NAME            reduce using rule 29 (Expr -> Expr * Expr .)
    PRINT           reduce using rule 29 (Expr -> Expr * Expr .)
    $end            reduce using rule 29 (Expr -> Expr * Expr .)
    }               reduce using rule 29 (Expr -> Expr * Expr .)
    ]               reduce using rule 29 (Expr -> Expr * Expr .)
    )               reduce using rule 29 (Expr -> Expr * Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! -               [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! *               [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! /               [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! %               [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! EQ              [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! NEQ             [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! >               [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! MOREEQ          [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! <               [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! LESSEQ          [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! AND             [ reduce using rule 29 (Expr -> Expr * Expr .) ]
  ! OR              [ reduce using rule 29 (Expr -> Expr * Expr .) ]


state 72

    (30) Expr -> Expr / Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 30 (Expr -> Expr / Expr .)
    WHILE           reduce using rule 30 (Expr -> Expr / Expr .)
    REPEAT          reduce using rule 30 (Expr -> Expr / Expr .)
    NAME            reduce using rule 30 (Expr -> Expr / Expr .)
    PRINT           reduce using rule 30 (Expr -> Expr / Expr .)
    $end            reduce using rule 30 (Expr -> Expr / Expr .)
    }               reduce using rule 30 (Expr -> Expr / Expr .)
    ]               reduce using rule 30 (Expr -> Expr / Expr .)
    )               reduce using rule 30 (Expr -> Expr / Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! -               [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! *               [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! /               [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! %               [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! EQ              [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! NEQ             [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! >               [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! MOREEQ          [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! <               [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! LESSEQ          [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! AND             [ reduce using rule 30 (Expr -> Expr / Expr .) ]
  ! OR              [ reduce using rule 30 (Expr -> Expr / Expr .) ]


state 73

    (31) Expr -> Expr % Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 31 (Expr -> Expr % Expr .)
    WHILE           reduce using rule 31 (Expr -> Expr % Expr .)
    REPEAT          reduce using rule 31 (Expr -> Expr % Expr .)
    NAME            reduce using rule 31 (Expr -> Expr % Expr .)
    PRINT           reduce using rule 31 (Expr -> Expr % Expr .)
    $end            reduce using rule 31 (Expr -> Expr % Expr .)
    }               reduce using rule 31 (Expr -> Expr % Expr .)
    ]               reduce using rule 31 (Expr -> Expr % Expr .)
    )               reduce using rule 31 (Expr -> Expr % Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! -               [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! *               [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! /               [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! %               [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! EQ              [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! NEQ             [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! >               [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! MOREEQ          [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! <               [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! LESSEQ          [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! AND             [ reduce using rule 31 (Expr -> Expr % Expr .) ]
  ! OR              [ reduce using rule 31 (Expr -> Expr % Expr .) ]


state 74

    (32) Condition -> Expr EQ Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 32 (Condition -> Expr EQ Expr .)
    WHILE           reduce using rule 32 (Condition -> Expr EQ Expr .)
    REPEAT          reduce using rule 32 (Condition -> Expr EQ Expr .)
    NAME            reduce using rule 32 (Condition -> Expr EQ Expr .)
    PRINT           reduce using rule 32 (Condition -> Expr EQ Expr .)
    $end            reduce using rule 32 (Condition -> Expr EQ Expr .)
    }               reduce using rule 32 (Condition -> Expr EQ Expr .)
    ]               reduce using rule 32 (Condition -> Expr EQ Expr .)
    )               reduce using rule 32 (Condition -> Expr EQ Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! -               [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! *               [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! /               [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! %               [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! EQ              [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! NEQ             [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! >               [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! MOREEQ          [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! <               [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! LESSEQ          [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! AND             [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]
  ! OR              [ reduce using rule 32 (Condition -> Expr EQ Expr .) ]


state 75

    (33) Condition -> Expr NEQ Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 33 (Condition -> Expr NEQ Expr .)
    WHILE           reduce using rule 33 (Condition -> Expr NEQ Expr .)
    REPEAT          reduce using rule 33 (Condition -> Expr NEQ Expr .)
    NAME            reduce using rule 33 (Condition -> Expr NEQ Expr .)
    PRINT           reduce using rule 33 (Condition -> Expr NEQ Expr .)
    $end            reduce using rule 33 (Condition -> Expr NEQ Expr .)
    }               reduce using rule 33 (Condition -> Expr NEQ Expr .)
    ]               reduce using rule 33 (Condition -> Expr NEQ Expr .)
    )               reduce using rule 33 (Condition -> Expr NEQ Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! -               [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! *               [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! /               [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! %               [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! EQ              [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! NEQ             [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! >               [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! MOREEQ          [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! <               [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! LESSEQ          [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! AND             [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]
  ! OR              [ reduce using rule 33 (Condition -> Expr NEQ Expr .) ]


state 76

    (35) Condition -> Expr > Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 35 (Condition -> Expr > Expr .)
    WHILE           reduce using rule 35 (Condition -> Expr > Expr .)
    REPEAT          reduce using rule 35 (Condition -> Expr > Expr .)
    NAME            reduce using rule 35 (Condition -> Expr > Expr .)
    PRINT           reduce using rule 35 (Condition -> Expr > Expr .)
    $end            reduce using rule 35 (Condition -> Expr > Expr .)
    }               reduce using rule 35 (Condition -> Expr > Expr .)
    ]               reduce using rule 35 (Condition -> Expr > Expr .)
    )               reduce using rule 35 (Condition -> Expr > Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! -               [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! *               [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! /               [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! %               [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! EQ              [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! NEQ             [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! >               [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! MOREEQ          [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! <               [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! LESSEQ          [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! AND             [ reduce using rule 35 (Condition -> Expr > Expr .) ]
  ! OR              [ reduce using rule 35 (Condition -> Expr > Expr .) ]


state 77

    (36) Condition -> Expr MOREEQ Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    WHILE           reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    REPEAT          reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    NAME            reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    PRINT           reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    $end            reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    }               reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    ]               reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    )               reduce using rule 36 (Condition -> Expr MOREEQ Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! -               [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! *               [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! /               [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! %               [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! EQ              [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! NEQ             [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! >               [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! MOREEQ          [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! <               [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! LESSEQ          [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! AND             [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]
  ! OR              [ reduce using rule 36 (Condition -> Expr MOREEQ Expr .) ]


state 78

    (37) Condition -> Expr < Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 37 (Condition -> Expr < Expr .)
    WHILE           reduce using rule 37 (Condition -> Expr < Expr .)
    REPEAT          reduce using rule 37 (Condition -> Expr < Expr .)
    NAME            reduce using rule 37 (Condition -> Expr < Expr .)
    PRINT           reduce using rule 37 (Condition -> Expr < Expr .)
    $end            reduce using rule 37 (Condition -> Expr < Expr .)
    }               reduce using rule 37 (Condition -> Expr < Expr .)
    ]               reduce using rule 37 (Condition -> Expr < Expr .)
    )               reduce using rule 37 (Condition -> Expr < Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! -               [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! *               [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! /               [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! %               [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! EQ              [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! NEQ             [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! >               [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! MOREEQ          [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! <               [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! LESSEQ          [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! AND             [ reduce using rule 37 (Condition -> Expr < Expr .) ]
  ! OR              [ reduce using rule 37 (Condition -> Expr < Expr .) ]


state 79

    (38) Condition -> Expr LESSEQ Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    WHILE           reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    REPEAT          reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    NAME            reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    PRINT           reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    $end            reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    }               reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    ]               reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    )               reduce using rule 38 (Condition -> Expr LESSEQ Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! -               [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! *               [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! /               [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! %               [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! EQ              [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! NEQ             [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! >               [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! MOREEQ          [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! <               [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! LESSEQ          [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! AND             [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]
  ! OR              [ reduce using rule 38 (Condition -> Expr LESSEQ Expr .) ]


state 80

    (39) Condition -> Expr AND Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 39 (Condition -> Expr AND Expr .)
    WHILE           reduce using rule 39 (Condition -> Expr AND Expr .)
    REPEAT          reduce using rule 39 (Condition -> Expr AND Expr .)
    NAME            reduce using rule 39 (Condition -> Expr AND Expr .)
    PRINT           reduce using rule 39 (Condition -> Expr AND Expr .)
    $end            reduce using rule 39 (Condition -> Expr AND Expr .)
    }               reduce using rule 39 (Condition -> Expr AND Expr .)
    ]               reduce using rule 39 (Condition -> Expr AND Expr .)
    )               reduce using rule 39 (Condition -> Expr AND Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! -               [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! *               [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! /               [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! %               [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! EQ              [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! NEQ             [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! >               [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! MOREEQ          [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! <               [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! LESSEQ          [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! AND             [ reduce using rule 39 (Condition -> Expr AND Expr .) ]
  ! OR              [ reduce using rule 39 (Condition -> Expr AND Expr .) ]


state 81

    (40) Condition -> Expr OR Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 40 (Condition -> Expr OR Expr .)
    WHILE           reduce using rule 40 (Condition -> Expr OR Expr .)
    REPEAT          reduce using rule 40 (Condition -> Expr OR Expr .)
    NAME            reduce using rule 40 (Condition -> Expr OR Expr .)
    PRINT           reduce using rule 40 (Condition -> Expr OR Expr .)
    $end            reduce using rule 40 (Condition -> Expr OR Expr .)
    }               reduce using rule 40 (Condition -> Expr OR Expr .)
    ]               reduce using rule 40 (Condition -> Expr OR Expr .)
    )               reduce using rule 40 (Condition -> Expr OR Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! +               [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! -               [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! *               [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! /               [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! %               [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! EQ              [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! NEQ             [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! >               [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! MOREEQ          [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! <               [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! LESSEQ          [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! AND             [ reduce using rule 40 (Condition -> Expr OR Expr .) ]
  ! OR              [ reduce using rule 40 (Condition -> Expr OR Expr .) ]


state 82

    (44) Variable -> NAME [ Expr . ]
    (45) Variable -> NAME [ Expr . ] [ Expr ]
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    ]               shift and go to state 91
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 83

    (41) Expr -> ( Expr ) .

    +               reduce using rule 41 (Expr -> ( Expr ) .)
    -               reduce using rule 41 (Expr -> ( Expr ) .)
    *               reduce using rule 41 (Expr -> ( Expr ) .)
    /               reduce using rule 41 (Expr -> ( Expr ) .)
    %               reduce using rule 41 (Expr -> ( Expr ) .)
    EQ              reduce using rule 41 (Expr -> ( Expr ) .)
    NEQ             reduce using rule 41 (Expr -> ( Expr ) .)
    >               reduce using rule 41 (Expr -> ( Expr ) .)
    MOREEQ          reduce using rule 41 (Expr -> ( Expr ) .)
    <               reduce using rule 41 (Expr -> ( Expr ) .)
    LESSEQ          reduce using rule 41 (Expr -> ( Expr ) .)
    AND             reduce using rule 41 (Expr -> ( Expr ) .)
    OR              reduce using rule 41 (Expr -> ( Expr ) .)
    IF              reduce using rule 41 (Expr -> ( Expr ) .)
    WHILE           reduce using rule 41 (Expr -> ( Expr ) .)
    REPEAT          reduce using rule 41 (Expr -> ( Expr ) .)
    NAME            reduce using rule 41 (Expr -> ( Expr ) .)
    PRINT           reduce using rule 41 (Expr -> ( Expr ) .)
    $end            reduce using rule 41 (Expr -> ( Expr ) .)
    }               reduce using rule 41 (Expr -> ( Expr ) .)
    ]               reduce using rule 41 (Expr -> ( Expr ) .)
    )               reduce using rule 41 (Expr -> ( Expr ) .)


state 84

    (42) Condition -> ( Condition ) .

    +               reduce using rule 42 (Condition -> ( Condition ) .)
    -               reduce using rule 42 (Condition -> ( Condition ) .)
    *               reduce using rule 42 (Condition -> ( Condition ) .)
    /               reduce using rule 42 (Condition -> ( Condition ) .)
    %               reduce using rule 42 (Condition -> ( Condition ) .)
    EQ              reduce using rule 42 (Condition -> ( Condition ) .)
    NEQ             reduce using rule 42 (Condition -> ( Condition ) .)
    >               reduce using rule 42 (Condition -> ( Condition ) .)
    MOREEQ          reduce using rule 42 (Condition -> ( Condition ) .)
    <               reduce using rule 42 (Condition -> ( Condition ) .)
    LESSEQ          reduce using rule 42 (Condition -> ( Condition ) .)
    AND             reduce using rule 42 (Condition -> ( Condition ) .)
    OR              reduce using rule 42 (Condition -> ( Condition ) .)
    IF              reduce using rule 42 (Condition -> ( Condition ) .)
    WHILE           reduce using rule 42 (Condition -> ( Condition ) .)
    REPEAT          reduce using rule 42 (Condition -> ( Condition ) .)
    NAME            reduce using rule 42 (Condition -> ( Condition ) .)
    PRINT           reduce using rule 42 (Condition -> ( Condition ) .)
    $end            reduce using rule 42 (Condition -> ( Condition ) .)
    }               reduce using rule 42 (Condition -> ( Condition ) .)
    ]               reduce using rule 42 (Condition -> ( Condition ) .)
    )               reduce using rule 42 (Condition -> ( Condition ) .)


state 85

    (8) Decl -> VAR NAME [ NUM ] .
    (9) Decl -> VAR NAME [ NUM ] . [ NUM ]

    VAR             reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    IF              reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    WHILE           reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    REPEAT          reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    NAME            reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    PRINT           reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    [               shift and go to state 92


state 86

    (23) Assign -> NAME [ Expr ] [ . Expr ] = Expr
    (47) Assign -> NAME [ Expr ] [ . Expr ] = INPUT
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 93
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 87

    (22) Assign -> NAME [ Expr ] = . Expr
    (46) Assign -> NAME [ Expr ] = . INPUT
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    INPUT           shift and go to state 95
    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 94
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 88

    (17) Conditions -> IF ( Condition ) THEN . { Code }
    (18) Conditions -> IF ( Condition ) THEN . { Code } OTHERWISE { Code }

    {               shift and go to state 96


state 89

    (19) WhileDo -> WHILE ( Condition ) DO . { Code }

    {               shift and go to state 97


state 90

    (20) RepeatUntil -> REPEAT { Code } UNTIL . ( Condition )

    (               shift and go to state 98


state 91

    (44) Variable -> NAME [ Expr ] .
    (45) Variable -> NAME [ Expr ] . [ Expr ]

    +               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    -               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    *               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    /               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    %               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    EQ              reduce using rule 44 (Variable -> NAME [ Expr ] .)
    NEQ             reduce using rule 44 (Variable -> NAME [ Expr ] .)
    >               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    MOREEQ          reduce using rule 44 (Variable -> NAME [ Expr ] .)
    <               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    LESSEQ          reduce using rule 44 (Variable -> NAME [ Expr ] .)
    AND             reduce using rule 44 (Variable -> NAME [ Expr ] .)
    OR              reduce using rule 44 (Variable -> NAME [ Expr ] .)
    IF              reduce using rule 44 (Variable -> NAME [ Expr ] .)
    WHILE           reduce using rule 44 (Variable -> NAME [ Expr ] .)
    REPEAT          reduce using rule 44 (Variable -> NAME [ Expr ] .)
    NAME            reduce using rule 44 (Variable -> NAME [ Expr ] .)
    PRINT           reduce using rule 44 (Variable -> NAME [ Expr ] .)
    $end            reduce using rule 44 (Variable -> NAME [ Expr ] .)
    }               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    ]               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    )               reduce using rule 44 (Variable -> NAME [ Expr ] .)
    [               shift and go to state 99


state 92

    (9) Decl -> VAR NAME [ NUM ] [ . NUM ]

    NUM             shift and go to state 100


state 93

    (23) Assign -> NAME [ Expr ] [ Expr . ] = Expr
    (47) Assign -> NAME [ Expr ] [ Expr . ] = INPUT
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    ]               shift and go to state 101
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 94

    (22) Assign -> NAME [ Expr ] = Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    IF              reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    WHILE           reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    REPEAT          reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    NAME            reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    PRINT           reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    $end            reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    }               reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 95

    (46) Assign -> NAME [ Expr ] = INPUT .

    IF              reduce using rule 46 (Assign -> NAME [ Expr ] = INPUT .)
    WHILE           reduce using rule 46 (Assign -> NAME [ Expr ] = INPUT .)
    REPEAT          reduce using rule 46 (Assign -> NAME [ Expr ] = INPUT .)
    NAME            reduce using rule 46 (Assign -> NAME [ Expr ] = INPUT .)
    PRINT           reduce using rule 46 (Assign -> NAME [ Expr ] = INPUT .)
    $end            reduce using rule 46 (Assign -> NAME [ Expr ] = INPUT .)
    }               reduce using rule 46 (Assign -> NAME [ Expr ] = INPUT .)


state 96

    (17) Conditions -> IF ( Condition ) THEN { . Code }
    (18) Conditions -> IF ( Condition ) THEN { . Code } OTHERWISE { Code }
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 102
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 97

    (19) WhileDo -> WHILE ( Condition ) DO { . Code }
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 103
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 98

    (20) RepeatUntil -> REPEAT { Code } UNTIL ( . Condition )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 40
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 104
    Expr                           shift and go to state 42
    Variable                       shift and go to state 30

state 99

    (45) Variable -> NAME [ Expr ] [ . Expr ]
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 105
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 100

    (9) Decl -> VAR NAME [ NUM ] [ NUM . ]

    ]               shift and go to state 106


state 101

    (23) Assign -> NAME [ Expr ] [ Expr ] . = Expr
    (47) Assign -> NAME [ Expr ] [ Expr ] . = INPUT

    =               shift and go to state 107


state 102

    (17) Conditions -> IF ( Condition ) THEN { Code . }
    (18) Conditions -> IF ( Condition ) THEN { Code . } OTHERWISE { Code }
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    }               shift and go to state 108
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 103

    (19) WhileDo -> WHILE ( Condition ) DO { Code . }
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    }               shift and go to state 109
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 104

    (20) RepeatUntil -> REPEAT { Code } UNTIL ( Condition . )
    (24) Expr -> Condition .

    )               shift and go to state 110
    EQ              reduce using rule 24 (Expr -> Condition .)
    NEQ             reduce using rule 24 (Expr -> Condition .)
    >               reduce using rule 24 (Expr -> Condition .)
    MOREEQ          reduce using rule 24 (Expr -> Condition .)
    <               reduce using rule 24 (Expr -> Condition .)
    LESSEQ          reduce using rule 24 (Expr -> Condition .)
    AND             reduce using rule 24 (Expr -> Condition .)
    OR              reduce using rule 24 (Expr -> Condition .)
    +               reduce using rule 24 (Expr -> Condition .)
    -               reduce using rule 24 (Expr -> Condition .)
    *               reduce using rule 24 (Expr -> Condition .)
    /               reduce using rule 24 (Expr -> Condition .)
    %               reduce using rule 24 (Expr -> Condition .)


state 105

    (45) Variable -> NAME [ Expr ] [ Expr . ]
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    ]               shift and go to state 111
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 106

    (9) Decl -> VAR NAME [ NUM ] [ NUM ] .

    VAR             reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    IF              reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    WHILE           reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    REPEAT          reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    NAME            reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    PRINT           reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)


state 107

    (23) Assign -> NAME [ Expr ] [ Expr ] = . Expr
    (47) Assign -> NAME [ Expr ] [ Expr ] = . INPUT
    (24) Expr -> . Condition
    (25) Expr -> . Variable
    (26) Expr -> . NUM
    (27) Expr -> . Expr + Expr
    (28) Expr -> . Expr - Expr
    (29) Expr -> . Expr * Expr
    (30) Expr -> . Expr / Expr
    (31) Expr -> . Expr % Expr
    (41) Expr -> . ( Expr )
    (32) Condition -> . Expr EQ Expr
    (33) Condition -> . Expr NEQ Expr
    (34) Condition -> . ! Expr
    (35) Condition -> . Expr > Expr
    (36) Condition -> . Expr MOREEQ Expr
    (37) Condition -> . Expr < Expr
    (38) Condition -> . Expr LESSEQ Expr
    (39) Condition -> . Expr AND Expr
    (40) Condition -> . Expr OR Expr
    (42) Condition -> . ( Condition )
    (43) Variable -> . NAME
    (44) Variable -> . NAME [ Expr ]
    (45) Variable -> . NAME [ Expr ] [ Expr ]

    INPUT           shift and go to state 113
    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 112
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 108

    (17) Conditions -> IF ( Condition ) THEN { Code } .
    (18) Conditions -> IF ( Condition ) THEN { Code } . OTHERWISE { Code }

    IF              reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    WHILE           reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    REPEAT          reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    NAME            reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    PRINT           reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    $end            reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    }               reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    OTHERWISE       shift and go to state 114


state 109

    (19) WhileDo -> WHILE ( Condition ) DO { Code } .

    IF              reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    WHILE           reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    REPEAT          reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    NAME            reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    PRINT           reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    $end            reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    }               reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)


state 110

    (20) RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .

    IF              reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    WHILE           reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    REPEAT          reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    NAME            reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    PRINT           reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    $end            reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    }               reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)


state 111

    (45) Variable -> NAME [ Expr ] [ Expr ] .

    +               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    -               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    *               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    /               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    %               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    EQ              reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    NEQ             reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    >               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    MOREEQ          reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    <               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    LESSEQ          reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    AND             reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    OR              reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    IF              reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    WHILE           reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    REPEAT          reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    NAME            reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    PRINT           reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    $end            reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    }               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    ]               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)
    )               reduce using rule 45 (Variable -> NAME [ Expr ] [ Expr ] .)


state 112

    (23) Assign -> NAME [ Expr ] [ Expr ] = Expr .
    (27) Expr -> Expr . + Expr
    (28) Expr -> Expr . - Expr
    (29) Expr -> Expr . * Expr
    (30) Expr -> Expr . / Expr
    (31) Expr -> Expr . % Expr
    (32) Condition -> Expr . EQ Expr
    (33) Condition -> Expr . NEQ Expr
    (35) Condition -> Expr . > Expr
    (36) Condition -> Expr . MOREEQ Expr
    (37) Condition -> Expr . < Expr
    (38) Condition -> Expr . LESSEQ Expr
    (39) Condition -> Expr . AND Expr
    (40) Condition -> Expr . OR Expr

    IF              reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Expr .)
    WHILE           reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Expr .)
    REPEAT          reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Expr .)
    NAME            reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Expr .)
    PRINT           reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Expr .)
    $end            reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Expr .)
    }               reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Expr .)
    +               shift and go to state 45
    -               shift and go to state 46
    *               shift and go to state 47
    /               shift and go to state 48
    %               shift and go to state 49
    EQ              shift and go to state 50
    NEQ             shift and go to state 51
    >               shift and go to state 52
    MOREEQ          shift and go to state 53
    <               shift and go to state 54
    LESSEQ          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 113

    (47) Assign -> NAME [ Expr ] [ Expr ] = INPUT .

    IF              reduce using rule 47 (Assign -> NAME [ Expr ] [ Expr ] = INPUT .)
    WHILE           reduce using rule 47 (Assign -> NAME [ Expr ] [ Expr ] = INPUT .)
    REPEAT          reduce using rule 47 (Assign -> NAME [ Expr ] [ Expr ] = INPUT .)
    NAME            reduce using rule 47 (Assign -> NAME [ Expr ] [ Expr ] = INPUT .)
    PRINT           reduce using rule 47 (Assign -> NAME [ Expr ] [ Expr ] = INPUT .)
    $end            reduce using rule 47 (Assign -> NAME [ Expr ] [ Expr ] = INPUT .)
    }               reduce using rule 47 (Assign -> NAME [ Expr ] [ Expr ] = INPUT .)


state 114

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE . { Code }

    {               shift and go to state 115


state 115

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { . Code }
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 116
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 116

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code . }
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Expr
    (46) Assign -> . NAME [ Expr ] = INPUT
    (47) Assign -> . NAME [ Expr ] [ Expr ] = INPUT
    (48) Assign -> . NAME = INPUT
    (49) Print -> . PRINT Expr
    (50) Print -> . PRINT NAME

    }               shift and go to state 117
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 117

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .

    IF              reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    WHILE           reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    REPEAT          reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    NAME            reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    PRINT           reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    $end            reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    }               reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ) in state 60 resolved as shift
WARNING: shift/reduce conflict for + in state 61 resolved as shift
WARNING: shift/reduce conflict for - in state 61 resolved as shift
WARNING: shift/reduce conflict for * in state 61 resolved as shift
WARNING: shift/reduce conflict for / in state 61 resolved as shift
WARNING: shift/reduce conflict for % in state 61 resolved as shift
WARNING: shift/reduce conflict for EQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for > in state 61 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for < in state 61 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for + in state 69 resolved as shift
WARNING: shift/reduce conflict for - in state 69 resolved as shift
WARNING: shift/reduce conflict for * in state 69 resolved as shift
WARNING: shift/reduce conflict for / in state 69 resolved as shift
WARNING: shift/reduce conflict for % in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for > in state 69 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for < in state 69 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for + in state 70 resolved as shift
WARNING: shift/reduce conflict for - in state 70 resolved as shift
WARNING: shift/reduce conflict for * in state 70 resolved as shift
WARNING: shift/reduce conflict for / in state 70 resolved as shift
WARNING: shift/reduce conflict for % in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for > in state 70 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for < in state 70 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for + in state 71 resolved as shift
WARNING: shift/reduce conflict for - in state 71 resolved as shift
WARNING: shift/reduce conflict for * in state 71 resolved as shift
WARNING: shift/reduce conflict for / in state 71 resolved as shift
WARNING: shift/reduce conflict for % in state 71 resolved as shift
WARNING: shift/reduce conflict for EQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for > in state 71 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for < in state 71 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for + in state 72 resolved as shift
WARNING: shift/reduce conflict for - in state 72 resolved as shift
WARNING: shift/reduce conflict for * in state 72 resolved as shift
WARNING: shift/reduce conflict for / in state 72 resolved as shift
WARNING: shift/reduce conflict for % in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for > in state 72 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for < in state 72 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for + in state 73 resolved as shift
WARNING: shift/reduce conflict for - in state 73 resolved as shift
WARNING: shift/reduce conflict for * in state 73 resolved as shift
WARNING: shift/reduce conflict for / in state 73 resolved as shift
WARNING: shift/reduce conflict for % in state 73 resolved as shift
WARNING: shift/reduce conflict for EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for > in state 73 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for < in state 73 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for + in state 74 resolved as shift
WARNING: shift/reduce conflict for - in state 74 resolved as shift
WARNING: shift/reduce conflict for * in state 74 resolved as shift
WARNING: shift/reduce conflict for / in state 74 resolved as shift
WARNING: shift/reduce conflict for % in state 74 resolved as shift
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for > in state 74 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for < in state 74 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for + in state 75 resolved as shift
WARNING: shift/reduce conflict for - in state 75 resolved as shift
WARNING: shift/reduce conflict for * in state 75 resolved as shift
WARNING: shift/reduce conflict for / in state 75 resolved as shift
WARNING: shift/reduce conflict for % in state 75 resolved as shift
WARNING: shift/reduce conflict for EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for > in state 75 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for < in state 75 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for + in state 76 resolved as shift
WARNING: shift/reduce conflict for - in state 76 resolved as shift
WARNING: shift/reduce conflict for * in state 76 resolved as shift
WARNING: shift/reduce conflict for / in state 76 resolved as shift
WARNING: shift/reduce conflict for % in state 76 resolved as shift
WARNING: shift/reduce conflict for EQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for > in state 76 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for < in state 76 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for + in state 77 resolved as shift
WARNING: shift/reduce conflict for - in state 77 resolved as shift
WARNING: shift/reduce conflict for * in state 77 resolved as shift
WARNING: shift/reduce conflict for / in state 77 resolved as shift
WARNING: shift/reduce conflict for % in state 77 resolved as shift
WARNING: shift/reduce conflict for EQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for > in state 77 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for < in state 77 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for + in state 78 resolved as shift
WARNING: shift/reduce conflict for - in state 78 resolved as shift
WARNING: shift/reduce conflict for * in state 78 resolved as shift
WARNING: shift/reduce conflict for / in state 78 resolved as shift
WARNING: shift/reduce conflict for % in state 78 resolved as shift
WARNING: shift/reduce conflict for EQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for > in state 78 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for < in state 78 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for + in state 79 resolved as shift
WARNING: shift/reduce conflict for - in state 79 resolved as shift
WARNING: shift/reduce conflict for * in state 79 resolved as shift
WARNING: shift/reduce conflict for / in state 79 resolved as shift
WARNING: shift/reduce conflict for % in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for > in state 79 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for < in state 79 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for + in state 80 resolved as shift
WARNING: shift/reduce conflict for - in state 80 resolved as shift
WARNING: shift/reduce conflict for * in state 80 resolved as shift
WARNING: shift/reduce conflict for / in state 80 resolved as shift
WARNING: shift/reduce conflict for % in state 80 resolved as shift
WARNING: shift/reduce conflict for EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for > in state 80 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for < in state 80 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for + in state 81 resolved as shift
WARNING: shift/reduce conflict for - in state 81 resolved as shift
WARNING: shift/reduce conflict for * in state 81 resolved as shift
WARNING: shift/reduce conflict for / in state 81 resolved as shift
WARNING: shift/reduce conflict for % in state 81 resolved as shift
WARNING: shift/reduce conflict for EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for > in state 81 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for < in state 81 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (Variable -> NAME)
WARNING: rejected rule (Print -> PRINT NAME) in state 28
WARNING: Rule (Print -> PRINT NAME) is never reduced
