Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    INPUT
    MATRIX

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Header Code
Rule 2     Program -> Code
Rule 3     Header -> Header Decl
Rule 4     Header -> Decl
Rule 5     Decl -> VAR NameList
Rule 6     NameList -> NAME
Rule 7     NameList -> NameList , NAME
Rule 8     Decl -> VAR NAME [ NUM ]
Rule 9     Decl -> VAR NAME [ NUM ] [ NUM ]
Rule 10    Code -> Code Codes
Rule 11    Code -> Codes
Rule 12    Codes -> Conditions
Rule 13    Codes -> WhileDo
Rule 14    Codes -> RepeatUntil
Rule 15    Codes -> Assign
Rule 16    Codes -> Print
Rule 17    Conditions -> IF ( Condition ) THEN { Code }
Rule 18    Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code }
Rule 19    WhileDo -> WHILE ( Condition ) DO { Code }
Rule 20    RepeatUntil -> REPEAT { Code } UNTIL ( Condition )
Rule 21    Assign -> NAME = Expr
Rule 22    Assign -> NAME [ Expr ] = Expr
Rule 23    Assign -> NAME [ Expr ] [ Expr ] = Value
Rule 24    Value -> Expr
Rule 25    Value -> READ
Rule 26    Expr -> Condition
Rule 27    Expr -> Variable
Rule 28    Expr -> NUM
Rule 29    Expr -> Expr + Expr
Rule 30    Expr -> Expr - Expr
Rule 31    Expr -> Expr * Expr
Rule 32    Expr -> Expr / Expr
Rule 33    Expr -> Expr % Expr
Rule 34    Condition -> Expr EQ Expr
Rule 35    Condition -> Expr NEQ Expr
Rule 36    Condition -> ! Expr
Rule 37    Condition -> Expr > Expr
Rule 38    Condition -> Expr MOREEQ Expr
Rule 39    Condition -> Expr < Expr
Rule 40    Condition -> Expr LESSEQ Expr
Rule 41    Condition -> Expr AND Expr
Rule 42    Condition -> Expr OR Expr
Rule 43    Expr -> ( Expr )
Rule 44    Condition -> ( Condition )
Rule 45    Variable -> NAME
Rule 46    Variable -> NAME [ Expr ]
Rule 47    Variable -> NAME [ Expr ] [ Expr ]
Rule 48    Print -> PRINT Expr
Rule 49    Print -> PRINT NAME

Terminals, with rules where they appear

!                    : 36
%                    : 33
(                    : 17 18 19 20 43 44
)                    : 17 18 19 20 43 44
*                    : 31
+                    : 29
,                    : 7
-                    : 30
/                    : 32
<                    : 39
=                    : 21 22 23
>                    : 37
AND                  : 41
ARRAY                : 
DO                   : 19
EQ                   : 34
IF                   : 17 18
INPUT                : 
LESSEQ               : 40
MATRIX               : 
MOREEQ               : 38
NAME                 : 6 7 8 9 21 22 23 45 46 47 49
NEQ                  : 35
NUM                  : 8 9 9 28
OR                   : 42
OTHERWISE            : 18
PRINT                : 48 49
READ                 : 25
REPEAT               : 20
THEN                 : 17 18
UNTIL                : 20
VAR                  : 5 8 9
WHILE                : 19
[                    : 8 9 9 22 23 23 46 47 47
]                    : 8 9 9 22 23 23 46 47 47
error                : 
{                    : 17 18 18 19 20
}                    : 17 18 18 19 20

Nonterminals, with rules where they appear

Assign               : 15
Code                 : 1 2 10 17 18 18 19 20
Codes                : 10 11
Condition            : 17 18 19 20 26 44
Conditions           : 12
Decl                 : 3 4
Expr                 : 21 22 22 23 23 24 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37 37 38 38 39 39 40 40 41 41 42 42 43 46 47 47 48
Header               : 1 3
NameList             : 5 7
Print                : 16
Program              : 0
RepeatUntil          : 14
Value                : 23
Variable             : 27
WhileDo              : 13

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Header Code
    (2) Program -> . Code
    (3) Header -> . Header Decl
    (4) Header -> . Decl
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (5) Decl -> . VAR NameList
    (8) Decl -> . VAR NAME [ NUM ]
    (9) Decl -> . VAR NAME [ NUM ] [ NUM ]
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    VAR             shift and go to state 6
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Program                        shift and go to state 1
    Header                         shift and go to state 2
    Code                           shift and go to state 3
    Decl                           shift and go to state 4
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 1

    (0) S' -> Program .



state 2

    (1) Program -> Header . Code
    (3) Header -> Header . Decl
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (5) Decl -> . VAR NameList
    (8) Decl -> . VAR NAME [ NUM ]
    (9) Decl -> . VAR NAME [ NUM ] [ NUM ]
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    VAR             shift and go to state 6
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 17
    Decl                           shift and go to state 18
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 3

    (2) Program -> Code .
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    $end            reduce using rule 2 (Program -> Code .)
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 4

    (4) Header -> Decl .

    VAR             reduce using rule 4 (Header -> Decl .)
    IF              reduce using rule 4 (Header -> Decl .)
    WHILE           reduce using rule 4 (Header -> Decl .)
    REPEAT          reduce using rule 4 (Header -> Decl .)
    NAME            reduce using rule 4 (Header -> Decl .)
    PRINT           reduce using rule 4 (Header -> Decl .)


state 5

    (11) Code -> Codes .

    IF              reduce using rule 11 (Code -> Codes .)
    WHILE           reduce using rule 11 (Code -> Codes .)
    REPEAT          reduce using rule 11 (Code -> Codes .)
    NAME            reduce using rule 11 (Code -> Codes .)
    PRINT           reduce using rule 11 (Code -> Codes .)
    $end            reduce using rule 11 (Code -> Codes .)
    }               reduce using rule 11 (Code -> Codes .)


state 6

    (5) Decl -> VAR . NameList
    (8) Decl -> VAR . NAME [ NUM ]
    (9) Decl -> VAR . NAME [ NUM ] [ NUM ]
    (6) NameList -> . NAME
    (7) NameList -> . NameList , NAME

    NAME            shift and go to state 21

    NameList                       shift and go to state 20

state 7

    (21) Assign -> NAME . = Expr
    (22) Assign -> NAME . [ Expr ] = Expr
    (23) Assign -> NAME . [ Expr ] [ Expr ] = Value

    =               shift and go to state 22
    [               shift and go to state 23


state 8

    (12) Codes -> Conditions .

    IF              reduce using rule 12 (Codes -> Conditions .)
    WHILE           reduce using rule 12 (Codes -> Conditions .)
    REPEAT          reduce using rule 12 (Codes -> Conditions .)
    NAME            reduce using rule 12 (Codes -> Conditions .)
    PRINT           reduce using rule 12 (Codes -> Conditions .)
    $end            reduce using rule 12 (Codes -> Conditions .)
    }               reduce using rule 12 (Codes -> Conditions .)


state 9

    (13) Codes -> WhileDo .

    IF              reduce using rule 13 (Codes -> WhileDo .)
    WHILE           reduce using rule 13 (Codes -> WhileDo .)
    REPEAT          reduce using rule 13 (Codes -> WhileDo .)
    NAME            reduce using rule 13 (Codes -> WhileDo .)
    PRINT           reduce using rule 13 (Codes -> WhileDo .)
    $end            reduce using rule 13 (Codes -> WhileDo .)
    }               reduce using rule 13 (Codes -> WhileDo .)


state 10

    (14) Codes -> RepeatUntil .

    IF              reduce using rule 14 (Codes -> RepeatUntil .)
    WHILE           reduce using rule 14 (Codes -> RepeatUntil .)
    REPEAT          reduce using rule 14 (Codes -> RepeatUntil .)
    NAME            reduce using rule 14 (Codes -> RepeatUntil .)
    PRINT           reduce using rule 14 (Codes -> RepeatUntil .)
    $end            reduce using rule 14 (Codes -> RepeatUntil .)
    }               reduce using rule 14 (Codes -> RepeatUntil .)


state 11

    (15) Codes -> Assign .

    IF              reduce using rule 15 (Codes -> Assign .)
    WHILE           reduce using rule 15 (Codes -> Assign .)
    REPEAT          reduce using rule 15 (Codes -> Assign .)
    NAME            reduce using rule 15 (Codes -> Assign .)
    PRINT           reduce using rule 15 (Codes -> Assign .)
    $end            reduce using rule 15 (Codes -> Assign .)
    }               reduce using rule 15 (Codes -> Assign .)


state 12

    (16) Codes -> Print .

    IF              reduce using rule 16 (Codes -> Print .)
    WHILE           reduce using rule 16 (Codes -> Print .)
    REPEAT          reduce using rule 16 (Codes -> Print .)
    NAME            reduce using rule 16 (Codes -> Print .)
    PRINT           reduce using rule 16 (Codes -> Print .)
    $end            reduce using rule 16 (Codes -> Print .)
    }               reduce using rule 16 (Codes -> Print .)


state 13

    (17) Conditions -> IF . ( Condition ) THEN { Code }
    (18) Conditions -> IF . ( Condition ) THEN { Code } OTHERWISE { Code }

    (               shift and go to state 24


state 14

    (19) WhileDo -> WHILE . ( Condition ) DO { Code }

    (               shift and go to state 25


state 15

    (20) RepeatUntil -> REPEAT . { Code } UNTIL ( Condition )

    {               shift and go to state 26


state 16

    (48) Print -> PRINT . Expr
    (49) Print -> PRINT . NAME
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NAME            shift and go to state 28
    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33

    Expr                           shift and go to state 27
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 17

    (1) Program -> Header Code .
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    $end            reduce using rule 1 (Program -> Header Code .)
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 18

    (3) Header -> Header Decl .

    VAR             reduce using rule 3 (Header -> Header Decl .)
    IF              reduce using rule 3 (Header -> Header Decl .)
    WHILE           reduce using rule 3 (Header -> Header Decl .)
    REPEAT          reduce using rule 3 (Header -> Header Decl .)
    NAME            reduce using rule 3 (Header -> Header Decl .)
    PRINT           reduce using rule 3 (Header -> Header Decl .)


state 19

    (10) Code -> Code Codes .

    IF              reduce using rule 10 (Code -> Code Codes .)
    WHILE           reduce using rule 10 (Code -> Code Codes .)
    REPEAT          reduce using rule 10 (Code -> Code Codes .)
    NAME            reduce using rule 10 (Code -> Code Codes .)
    PRINT           reduce using rule 10 (Code -> Code Codes .)
    $end            reduce using rule 10 (Code -> Code Codes .)
    }               reduce using rule 10 (Code -> Code Codes .)


state 20

    (5) Decl -> VAR NameList .
    (7) NameList -> NameList . , NAME

    VAR             reduce using rule 5 (Decl -> VAR NameList .)
    IF              reduce using rule 5 (Decl -> VAR NameList .)
    WHILE           reduce using rule 5 (Decl -> VAR NameList .)
    REPEAT          reduce using rule 5 (Decl -> VAR NameList .)
    NAME            reduce using rule 5 (Decl -> VAR NameList .)
    PRINT           reduce using rule 5 (Decl -> VAR NameList .)
    ,               shift and go to state 34


state 21

    (8) Decl -> VAR NAME . [ NUM ]
    (9) Decl -> VAR NAME . [ NUM ] [ NUM ]
    (6) NameList -> NAME .

    [               shift and go to state 35
    ,               reduce using rule 6 (NameList -> NAME .)
    VAR             reduce using rule 6 (NameList -> NAME .)
    IF              reduce using rule 6 (NameList -> NAME .)
    WHILE           reduce using rule 6 (NameList -> NAME .)
    REPEAT          reduce using rule 6 (NameList -> NAME .)
    NAME            reduce using rule 6 (NameList -> NAME .)
    PRINT           reduce using rule 6 (NameList -> NAME .)


state 22

    (21) Assign -> NAME = . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 37
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 23

    (22) Assign -> NAME [ . Expr ] = Expr
    (23) Assign -> NAME [ . Expr ] [ Expr ] = Value
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 38
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 24

    (17) Conditions -> IF ( . Condition ) THEN { Code }
    (18) Conditions -> IF ( . Condition ) THEN { Code } OTHERWISE { Code }
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 39
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 40
    Expr                           shift and go to state 41
    Variable                       shift and go to state 30

state 25

    (19) WhileDo -> WHILE ( . Condition ) DO { Code }
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 39
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 42
    Expr                           shift and go to state 41
    Variable                       shift and go to state 30

state 26

    (20) RepeatUntil -> REPEAT { . Code } UNTIL ( Condition )
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 43
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 27

    (48) Print -> PRINT Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    IF              reduce using rule 48 (Print -> PRINT Expr .)
    WHILE           reduce using rule 48 (Print -> PRINT Expr .)
    REPEAT          reduce using rule 48 (Print -> PRINT Expr .)
    NAME            reduce using rule 48 (Print -> PRINT Expr .)
    PRINT           reduce using rule 48 (Print -> PRINT Expr .)
    $end            reduce using rule 48 (Print -> PRINT Expr .)
    }               reduce using rule 48 (Print -> PRINT Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 28

    (49) Print -> PRINT NAME .
    (45) Variable -> NAME .
    (46) Variable -> NAME . [ Expr ]
    (47) Variable -> NAME . [ Expr ] [ Expr ]

  ! reduce/reduce conflict for IF resolved using rule 45 (Variable -> NAME .)
  ! reduce/reduce conflict for WHILE resolved using rule 45 (Variable -> NAME .)
  ! reduce/reduce conflict for REPEAT resolved using rule 45 (Variable -> NAME .)
  ! reduce/reduce conflict for NAME resolved using rule 45 (Variable -> NAME .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (Variable -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 45 (Variable -> NAME .)
  ! reduce/reduce conflict for } resolved using rule 45 (Variable -> NAME .)
    +               reduce using rule 45 (Variable -> NAME .)
    -               reduce using rule 45 (Variable -> NAME .)
    *               reduce using rule 45 (Variable -> NAME .)
    /               reduce using rule 45 (Variable -> NAME .)
    %               reduce using rule 45 (Variable -> NAME .)
    EQ              reduce using rule 45 (Variable -> NAME .)
    NEQ             reduce using rule 45 (Variable -> NAME .)
    >               reduce using rule 45 (Variable -> NAME .)
    MOREEQ          reduce using rule 45 (Variable -> NAME .)
    <               reduce using rule 45 (Variable -> NAME .)
    LESSEQ          reduce using rule 45 (Variable -> NAME .)
    AND             reduce using rule 45 (Variable -> NAME .)
    OR              reduce using rule 45 (Variable -> NAME .)
    IF              reduce using rule 45 (Variable -> NAME .)
    WHILE           reduce using rule 45 (Variable -> NAME .)
    REPEAT          reduce using rule 45 (Variable -> NAME .)
    NAME            reduce using rule 45 (Variable -> NAME .)
    PRINT           reduce using rule 45 (Variable -> NAME .)
    $end            reduce using rule 45 (Variable -> NAME .)
    }               reduce using rule 45 (Variable -> NAME .)
    [               shift and go to state 57

  ! IF              [ reduce using rule 49 (Print -> PRINT NAME .) ]
  ! WHILE           [ reduce using rule 49 (Print -> PRINT NAME .) ]
  ! REPEAT          [ reduce using rule 49 (Print -> PRINT NAME .) ]
  ! NAME            [ reduce using rule 49 (Print -> PRINT NAME .) ]
  ! PRINT           [ reduce using rule 49 (Print -> PRINT NAME .) ]
  ! $end            [ reduce using rule 49 (Print -> PRINT NAME .) ]
  ! }               [ reduce using rule 49 (Print -> PRINT NAME .) ]


state 29

    (26) Expr -> Condition .

    +               reduce using rule 26 (Expr -> Condition .)
    -               reduce using rule 26 (Expr -> Condition .)
    *               reduce using rule 26 (Expr -> Condition .)
    /               reduce using rule 26 (Expr -> Condition .)
    %               reduce using rule 26 (Expr -> Condition .)
    EQ              reduce using rule 26 (Expr -> Condition .)
    NEQ             reduce using rule 26 (Expr -> Condition .)
    >               reduce using rule 26 (Expr -> Condition .)
    MOREEQ          reduce using rule 26 (Expr -> Condition .)
    <               reduce using rule 26 (Expr -> Condition .)
    LESSEQ          reduce using rule 26 (Expr -> Condition .)
    AND             reduce using rule 26 (Expr -> Condition .)
    OR              reduce using rule 26 (Expr -> Condition .)
    IF              reduce using rule 26 (Expr -> Condition .)
    WHILE           reduce using rule 26 (Expr -> Condition .)
    REPEAT          reduce using rule 26 (Expr -> Condition .)
    NAME            reduce using rule 26 (Expr -> Condition .)
    PRINT           reduce using rule 26 (Expr -> Condition .)
    $end            reduce using rule 26 (Expr -> Condition .)
    }               reduce using rule 26 (Expr -> Condition .)
    ]               reduce using rule 26 (Expr -> Condition .)
    )               reduce using rule 26 (Expr -> Condition .)


state 30

    (27) Expr -> Variable .

    +               reduce using rule 27 (Expr -> Variable .)
    -               reduce using rule 27 (Expr -> Variable .)
    *               reduce using rule 27 (Expr -> Variable .)
    /               reduce using rule 27 (Expr -> Variable .)
    %               reduce using rule 27 (Expr -> Variable .)
    EQ              reduce using rule 27 (Expr -> Variable .)
    NEQ             reduce using rule 27 (Expr -> Variable .)
    >               reduce using rule 27 (Expr -> Variable .)
    MOREEQ          reduce using rule 27 (Expr -> Variable .)
    <               reduce using rule 27 (Expr -> Variable .)
    LESSEQ          reduce using rule 27 (Expr -> Variable .)
    AND             reduce using rule 27 (Expr -> Variable .)
    OR              reduce using rule 27 (Expr -> Variable .)
    IF              reduce using rule 27 (Expr -> Variable .)
    WHILE           reduce using rule 27 (Expr -> Variable .)
    REPEAT          reduce using rule 27 (Expr -> Variable .)
    NAME            reduce using rule 27 (Expr -> Variable .)
    PRINT           reduce using rule 27 (Expr -> Variable .)
    $end            reduce using rule 27 (Expr -> Variable .)
    }               reduce using rule 27 (Expr -> Variable .)
    ]               reduce using rule 27 (Expr -> Variable .)
    )               reduce using rule 27 (Expr -> Variable .)


state 31

    (28) Expr -> NUM .

    +               reduce using rule 28 (Expr -> NUM .)
    -               reduce using rule 28 (Expr -> NUM .)
    *               reduce using rule 28 (Expr -> NUM .)
    /               reduce using rule 28 (Expr -> NUM .)
    %               reduce using rule 28 (Expr -> NUM .)
    EQ              reduce using rule 28 (Expr -> NUM .)
    NEQ             reduce using rule 28 (Expr -> NUM .)
    >               reduce using rule 28 (Expr -> NUM .)
    MOREEQ          reduce using rule 28 (Expr -> NUM .)
    <               reduce using rule 28 (Expr -> NUM .)
    LESSEQ          reduce using rule 28 (Expr -> NUM .)
    AND             reduce using rule 28 (Expr -> NUM .)
    OR              reduce using rule 28 (Expr -> NUM .)
    IF              reduce using rule 28 (Expr -> NUM .)
    WHILE           reduce using rule 28 (Expr -> NUM .)
    REPEAT          reduce using rule 28 (Expr -> NUM .)
    NAME            reduce using rule 28 (Expr -> NUM .)
    PRINT           reduce using rule 28 (Expr -> NUM .)
    $end            reduce using rule 28 (Expr -> NUM .)
    }               reduce using rule 28 (Expr -> NUM .)
    ]               reduce using rule 28 (Expr -> NUM .)
    )               reduce using rule 28 (Expr -> NUM .)


state 32

    (43) Expr -> ( . Expr )
    (44) Condition -> ( . Condition )
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 58
    Condition                      shift and go to state 59
    Variable                       shift and go to state 30

state 33

    (36) Condition -> ! . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 60
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 34

    (7) NameList -> NameList , . NAME

    NAME            shift and go to state 61


state 35

    (8) Decl -> VAR NAME [ . NUM ]
    (9) Decl -> VAR NAME [ . NUM ] [ NUM ]

    NUM             shift and go to state 62


state 36

    (45) Variable -> NAME .
    (46) Variable -> NAME . [ Expr ]
    (47) Variable -> NAME . [ Expr ] [ Expr ]

    +               reduce using rule 45 (Variable -> NAME .)
    -               reduce using rule 45 (Variable -> NAME .)
    *               reduce using rule 45 (Variable -> NAME .)
    /               reduce using rule 45 (Variable -> NAME .)
    %               reduce using rule 45 (Variable -> NAME .)
    EQ              reduce using rule 45 (Variable -> NAME .)
    NEQ             reduce using rule 45 (Variable -> NAME .)
    >               reduce using rule 45 (Variable -> NAME .)
    MOREEQ          reduce using rule 45 (Variable -> NAME .)
    <               reduce using rule 45 (Variable -> NAME .)
    LESSEQ          reduce using rule 45 (Variable -> NAME .)
    AND             reduce using rule 45 (Variable -> NAME .)
    OR              reduce using rule 45 (Variable -> NAME .)
    IF              reduce using rule 45 (Variable -> NAME .)
    WHILE           reduce using rule 45 (Variable -> NAME .)
    REPEAT          reduce using rule 45 (Variable -> NAME .)
    NAME            reduce using rule 45 (Variable -> NAME .)
    PRINT           reduce using rule 45 (Variable -> NAME .)
    $end            reduce using rule 45 (Variable -> NAME .)
    }               reduce using rule 45 (Variable -> NAME .)
    ]               reduce using rule 45 (Variable -> NAME .)
    )               reduce using rule 45 (Variable -> NAME .)
    [               shift and go to state 57


state 37

    (21) Assign -> NAME = Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    IF              reduce using rule 21 (Assign -> NAME = Expr .)
    WHILE           reduce using rule 21 (Assign -> NAME = Expr .)
    REPEAT          reduce using rule 21 (Assign -> NAME = Expr .)
    NAME            reduce using rule 21 (Assign -> NAME = Expr .)
    PRINT           reduce using rule 21 (Assign -> NAME = Expr .)
    $end            reduce using rule 21 (Assign -> NAME = Expr .)
    }               reduce using rule 21 (Assign -> NAME = Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 38

    (22) Assign -> NAME [ Expr . ] = Expr
    (23) Assign -> NAME [ Expr . ] [ Expr ] = Value
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    ]               shift and go to state 63
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 39

    (44) Condition -> ( . Condition )
    (43) Expr -> ( . Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 39
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 59
    Expr                           shift and go to state 64
    Variable                       shift and go to state 30

state 40

    (17) Conditions -> IF ( Condition . ) THEN { Code }
    (18) Conditions -> IF ( Condition . ) THEN { Code } OTHERWISE { Code }
    (26) Expr -> Condition .

    )               shift and go to state 65
    EQ              reduce using rule 26 (Expr -> Condition .)
    NEQ             reduce using rule 26 (Expr -> Condition .)
    >               reduce using rule 26 (Expr -> Condition .)
    MOREEQ          reduce using rule 26 (Expr -> Condition .)
    <               reduce using rule 26 (Expr -> Condition .)
    LESSEQ          reduce using rule 26 (Expr -> Condition .)
    AND             reduce using rule 26 (Expr -> Condition .)
    OR              reduce using rule 26 (Expr -> Condition .)
    +               reduce using rule 26 (Expr -> Condition .)
    -               reduce using rule 26 (Expr -> Condition .)
    *               reduce using rule 26 (Expr -> Condition .)
    /               reduce using rule 26 (Expr -> Condition .)
    %               reduce using rule 26 (Expr -> Condition .)


state 41

    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr

    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48


state 42

    (19) WhileDo -> WHILE ( Condition . ) DO { Code }
    (26) Expr -> Condition .

    )               shift and go to state 66
    EQ              reduce using rule 26 (Expr -> Condition .)
    NEQ             reduce using rule 26 (Expr -> Condition .)
    >               reduce using rule 26 (Expr -> Condition .)
    MOREEQ          reduce using rule 26 (Expr -> Condition .)
    <               reduce using rule 26 (Expr -> Condition .)
    LESSEQ          reduce using rule 26 (Expr -> Condition .)
    AND             reduce using rule 26 (Expr -> Condition .)
    OR              reduce using rule 26 (Expr -> Condition .)
    +               reduce using rule 26 (Expr -> Condition .)
    -               reduce using rule 26 (Expr -> Condition .)
    *               reduce using rule 26 (Expr -> Condition .)
    /               reduce using rule 26 (Expr -> Condition .)
    %               reduce using rule 26 (Expr -> Condition .)


state 43

    (20) RepeatUntil -> REPEAT { Code . } UNTIL ( Condition )
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    }               shift and go to state 67
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 44

    (29) Expr -> Expr + . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 68
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 45

    (30) Expr -> Expr - . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 69
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 46

    (31) Expr -> Expr * . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 70
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 47

    (32) Expr -> Expr / . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 71
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 48

    (33) Expr -> Expr % . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 72
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 49

    (34) Condition -> Expr EQ . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 73
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 50

    (35) Condition -> Expr NEQ . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 74
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 51

    (37) Condition -> Expr > . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 75
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 52

    (38) Condition -> Expr MOREEQ . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 76
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 53

    (39) Condition -> Expr < . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 77
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 54

    (40) Condition -> Expr LESSEQ . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 78
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 55

    (41) Condition -> Expr AND . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 79
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 56

    (42) Condition -> Expr OR . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 80
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 57

    (46) Variable -> NAME [ . Expr ]
    (47) Variable -> NAME [ . Expr ] [ Expr ]
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 81
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 58

    (43) Expr -> ( Expr . )
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    )               shift and go to state 82
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 59

    (44) Condition -> ( Condition . )
    (26) Expr -> Condition .

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 83
    +               reduce using rule 26 (Expr -> Condition .)
    -               reduce using rule 26 (Expr -> Condition .)
    *               reduce using rule 26 (Expr -> Condition .)
    /               reduce using rule 26 (Expr -> Condition .)
    %               reduce using rule 26 (Expr -> Condition .)
    EQ              reduce using rule 26 (Expr -> Condition .)
    NEQ             reduce using rule 26 (Expr -> Condition .)
    >               reduce using rule 26 (Expr -> Condition .)
    MOREEQ          reduce using rule 26 (Expr -> Condition .)
    <               reduce using rule 26 (Expr -> Condition .)
    LESSEQ          reduce using rule 26 (Expr -> Condition .)
    AND             reduce using rule 26 (Expr -> Condition .)
    OR              reduce using rule 26 (Expr -> Condition .)

  ! )               [ reduce using rule 26 (Expr -> Condition .) ]


state 60

    (36) Condition -> ! Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 36 (Condition -> ! Expr .)
    WHILE           reduce using rule 36 (Condition -> ! Expr .)
    REPEAT          reduce using rule 36 (Condition -> ! Expr .)
    NAME            reduce using rule 36 (Condition -> ! Expr .)
    PRINT           reduce using rule 36 (Condition -> ! Expr .)
    $end            reduce using rule 36 (Condition -> ! Expr .)
    }               reduce using rule 36 (Condition -> ! Expr .)
    ]               reduce using rule 36 (Condition -> ! Expr .)
    )               reduce using rule 36 (Condition -> ! Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! -               [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! *               [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! /               [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! %               [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! EQ              [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! NEQ             [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! >               [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! MOREEQ          [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! <               [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! LESSEQ          [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! AND             [ reduce using rule 36 (Condition -> ! Expr .) ]
  ! OR              [ reduce using rule 36 (Condition -> ! Expr .) ]


state 61

    (7) NameList -> NameList , NAME .

    ,               reduce using rule 7 (NameList -> NameList , NAME .)
    VAR             reduce using rule 7 (NameList -> NameList , NAME .)
    IF              reduce using rule 7 (NameList -> NameList , NAME .)
    WHILE           reduce using rule 7 (NameList -> NameList , NAME .)
    REPEAT          reduce using rule 7 (NameList -> NameList , NAME .)
    NAME            reduce using rule 7 (NameList -> NameList , NAME .)
    PRINT           reduce using rule 7 (NameList -> NameList , NAME .)


state 62

    (8) Decl -> VAR NAME [ NUM . ]
    (9) Decl -> VAR NAME [ NUM . ] [ NUM ]

    ]               shift and go to state 84


state 63

    (22) Assign -> NAME [ Expr ] . = Expr
    (23) Assign -> NAME [ Expr ] . [ Expr ] = Value

    =               shift and go to state 86
    [               shift and go to state 85


state 64

    (43) Expr -> ( Expr . )
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr

    )               shift and go to state 82
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48


state 65

    (17) Conditions -> IF ( Condition ) . THEN { Code }
    (18) Conditions -> IF ( Condition ) . THEN { Code } OTHERWISE { Code }

    THEN            shift and go to state 87


state 66

    (19) WhileDo -> WHILE ( Condition ) . DO { Code }

    DO              shift and go to state 88


state 67

    (20) RepeatUntil -> REPEAT { Code } . UNTIL ( Condition )

    UNTIL           shift and go to state 89


state 68

    (29) Expr -> Expr + Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 29 (Expr -> Expr + Expr .)
    WHILE           reduce using rule 29 (Expr -> Expr + Expr .)
    REPEAT          reduce using rule 29 (Expr -> Expr + Expr .)
    NAME            reduce using rule 29 (Expr -> Expr + Expr .)
    PRINT           reduce using rule 29 (Expr -> Expr + Expr .)
    $end            reduce using rule 29 (Expr -> Expr + Expr .)
    }               reduce using rule 29 (Expr -> Expr + Expr .)
    ]               reduce using rule 29 (Expr -> Expr + Expr .)
    )               reduce using rule 29 (Expr -> Expr + Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! -               [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! *               [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! /               [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! %               [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! EQ              [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! NEQ             [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! >               [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! MOREEQ          [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! <               [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! LESSEQ          [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! AND             [ reduce using rule 29 (Expr -> Expr + Expr .) ]
  ! OR              [ reduce using rule 29 (Expr -> Expr + Expr .) ]


state 69

    (30) Expr -> Expr - Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 30 (Expr -> Expr - Expr .)
    WHILE           reduce using rule 30 (Expr -> Expr - Expr .)
    REPEAT          reduce using rule 30 (Expr -> Expr - Expr .)
    NAME            reduce using rule 30 (Expr -> Expr - Expr .)
    PRINT           reduce using rule 30 (Expr -> Expr - Expr .)
    $end            reduce using rule 30 (Expr -> Expr - Expr .)
    }               reduce using rule 30 (Expr -> Expr - Expr .)
    ]               reduce using rule 30 (Expr -> Expr - Expr .)
    )               reduce using rule 30 (Expr -> Expr - Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! -               [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! *               [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! /               [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! %               [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! EQ              [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! NEQ             [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! >               [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! MOREEQ          [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! <               [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! LESSEQ          [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! AND             [ reduce using rule 30 (Expr -> Expr - Expr .) ]
  ! OR              [ reduce using rule 30 (Expr -> Expr - Expr .) ]


state 70

    (31) Expr -> Expr * Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 31 (Expr -> Expr * Expr .)
    WHILE           reduce using rule 31 (Expr -> Expr * Expr .)
    REPEAT          reduce using rule 31 (Expr -> Expr * Expr .)
    NAME            reduce using rule 31 (Expr -> Expr * Expr .)
    PRINT           reduce using rule 31 (Expr -> Expr * Expr .)
    $end            reduce using rule 31 (Expr -> Expr * Expr .)
    }               reduce using rule 31 (Expr -> Expr * Expr .)
    ]               reduce using rule 31 (Expr -> Expr * Expr .)
    )               reduce using rule 31 (Expr -> Expr * Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! -               [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! *               [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! /               [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! %               [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! EQ              [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! NEQ             [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! >               [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! MOREEQ          [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! <               [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! LESSEQ          [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! AND             [ reduce using rule 31 (Expr -> Expr * Expr .) ]
  ! OR              [ reduce using rule 31 (Expr -> Expr * Expr .) ]


state 71

    (32) Expr -> Expr / Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 32 (Expr -> Expr / Expr .)
    WHILE           reduce using rule 32 (Expr -> Expr / Expr .)
    REPEAT          reduce using rule 32 (Expr -> Expr / Expr .)
    NAME            reduce using rule 32 (Expr -> Expr / Expr .)
    PRINT           reduce using rule 32 (Expr -> Expr / Expr .)
    $end            reduce using rule 32 (Expr -> Expr / Expr .)
    }               reduce using rule 32 (Expr -> Expr / Expr .)
    ]               reduce using rule 32 (Expr -> Expr / Expr .)
    )               reduce using rule 32 (Expr -> Expr / Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! -               [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! *               [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! /               [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! %               [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! EQ              [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! NEQ             [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! >               [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! MOREEQ          [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! <               [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! LESSEQ          [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! AND             [ reduce using rule 32 (Expr -> Expr / Expr .) ]
  ! OR              [ reduce using rule 32 (Expr -> Expr / Expr .) ]


state 72

    (33) Expr -> Expr % Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 33 (Expr -> Expr % Expr .)
    WHILE           reduce using rule 33 (Expr -> Expr % Expr .)
    REPEAT          reduce using rule 33 (Expr -> Expr % Expr .)
    NAME            reduce using rule 33 (Expr -> Expr % Expr .)
    PRINT           reduce using rule 33 (Expr -> Expr % Expr .)
    $end            reduce using rule 33 (Expr -> Expr % Expr .)
    }               reduce using rule 33 (Expr -> Expr % Expr .)
    ]               reduce using rule 33 (Expr -> Expr % Expr .)
    )               reduce using rule 33 (Expr -> Expr % Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! -               [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! *               [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! /               [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! %               [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! EQ              [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! NEQ             [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! >               [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! MOREEQ          [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! <               [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! LESSEQ          [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! AND             [ reduce using rule 33 (Expr -> Expr % Expr .) ]
  ! OR              [ reduce using rule 33 (Expr -> Expr % Expr .) ]


state 73

    (34) Condition -> Expr EQ Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 34 (Condition -> Expr EQ Expr .)
    WHILE           reduce using rule 34 (Condition -> Expr EQ Expr .)
    REPEAT          reduce using rule 34 (Condition -> Expr EQ Expr .)
    NAME            reduce using rule 34 (Condition -> Expr EQ Expr .)
    PRINT           reduce using rule 34 (Condition -> Expr EQ Expr .)
    $end            reduce using rule 34 (Condition -> Expr EQ Expr .)
    }               reduce using rule 34 (Condition -> Expr EQ Expr .)
    ]               reduce using rule 34 (Condition -> Expr EQ Expr .)
    )               reduce using rule 34 (Condition -> Expr EQ Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! -               [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! *               [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! /               [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! %               [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! EQ              [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! NEQ             [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! >               [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! MOREEQ          [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! <               [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! LESSEQ          [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! AND             [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]
  ! OR              [ reduce using rule 34 (Condition -> Expr EQ Expr .) ]


state 74

    (35) Condition -> Expr NEQ Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 35 (Condition -> Expr NEQ Expr .)
    WHILE           reduce using rule 35 (Condition -> Expr NEQ Expr .)
    REPEAT          reduce using rule 35 (Condition -> Expr NEQ Expr .)
    NAME            reduce using rule 35 (Condition -> Expr NEQ Expr .)
    PRINT           reduce using rule 35 (Condition -> Expr NEQ Expr .)
    $end            reduce using rule 35 (Condition -> Expr NEQ Expr .)
    }               reduce using rule 35 (Condition -> Expr NEQ Expr .)
    ]               reduce using rule 35 (Condition -> Expr NEQ Expr .)
    )               reduce using rule 35 (Condition -> Expr NEQ Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! -               [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! *               [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! /               [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! %               [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! EQ              [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! NEQ             [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! >               [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! MOREEQ          [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! <               [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! LESSEQ          [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! AND             [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]
  ! OR              [ reduce using rule 35 (Condition -> Expr NEQ Expr .) ]


state 75

    (37) Condition -> Expr > Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 37 (Condition -> Expr > Expr .)
    WHILE           reduce using rule 37 (Condition -> Expr > Expr .)
    REPEAT          reduce using rule 37 (Condition -> Expr > Expr .)
    NAME            reduce using rule 37 (Condition -> Expr > Expr .)
    PRINT           reduce using rule 37 (Condition -> Expr > Expr .)
    $end            reduce using rule 37 (Condition -> Expr > Expr .)
    }               reduce using rule 37 (Condition -> Expr > Expr .)
    ]               reduce using rule 37 (Condition -> Expr > Expr .)
    )               reduce using rule 37 (Condition -> Expr > Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! -               [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! *               [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! /               [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! %               [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! EQ              [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! NEQ             [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! >               [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! MOREEQ          [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! <               [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! LESSEQ          [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! AND             [ reduce using rule 37 (Condition -> Expr > Expr .) ]
  ! OR              [ reduce using rule 37 (Condition -> Expr > Expr .) ]


state 76

    (38) Condition -> Expr MOREEQ Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    WHILE           reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    REPEAT          reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    NAME            reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    PRINT           reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    $end            reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    }               reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    ]               reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    )               reduce using rule 38 (Condition -> Expr MOREEQ Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! -               [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! *               [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! /               [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! %               [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! EQ              [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! NEQ             [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! >               [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! MOREEQ          [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! <               [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! LESSEQ          [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! AND             [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]
  ! OR              [ reduce using rule 38 (Condition -> Expr MOREEQ Expr .) ]


state 77

    (39) Condition -> Expr < Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 39 (Condition -> Expr < Expr .)
    WHILE           reduce using rule 39 (Condition -> Expr < Expr .)
    REPEAT          reduce using rule 39 (Condition -> Expr < Expr .)
    NAME            reduce using rule 39 (Condition -> Expr < Expr .)
    PRINT           reduce using rule 39 (Condition -> Expr < Expr .)
    $end            reduce using rule 39 (Condition -> Expr < Expr .)
    }               reduce using rule 39 (Condition -> Expr < Expr .)
    ]               reduce using rule 39 (Condition -> Expr < Expr .)
    )               reduce using rule 39 (Condition -> Expr < Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! -               [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! *               [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! /               [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! %               [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! EQ              [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! NEQ             [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! >               [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! MOREEQ          [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! <               [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! LESSEQ          [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! AND             [ reduce using rule 39 (Condition -> Expr < Expr .) ]
  ! OR              [ reduce using rule 39 (Condition -> Expr < Expr .) ]


state 78

    (40) Condition -> Expr LESSEQ Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    WHILE           reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    REPEAT          reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    NAME            reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    PRINT           reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    $end            reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    }               reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    ]               reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    )               reduce using rule 40 (Condition -> Expr LESSEQ Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! -               [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! *               [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! /               [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! %               [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! EQ              [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! NEQ             [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! >               [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! MOREEQ          [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! <               [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! LESSEQ          [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! AND             [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]
  ! OR              [ reduce using rule 40 (Condition -> Expr LESSEQ Expr .) ]


state 79

    (41) Condition -> Expr AND Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 41 (Condition -> Expr AND Expr .)
    WHILE           reduce using rule 41 (Condition -> Expr AND Expr .)
    REPEAT          reduce using rule 41 (Condition -> Expr AND Expr .)
    NAME            reduce using rule 41 (Condition -> Expr AND Expr .)
    PRINT           reduce using rule 41 (Condition -> Expr AND Expr .)
    $end            reduce using rule 41 (Condition -> Expr AND Expr .)
    }               reduce using rule 41 (Condition -> Expr AND Expr .)
    ]               reduce using rule 41 (Condition -> Expr AND Expr .)
    )               reduce using rule 41 (Condition -> Expr AND Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! -               [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! *               [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! /               [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! %               [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! EQ              [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! NEQ             [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! >               [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! MOREEQ          [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! <               [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! LESSEQ          [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! AND             [ reduce using rule 41 (Condition -> Expr AND Expr .) ]
  ! OR              [ reduce using rule 41 (Condition -> Expr AND Expr .) ]


state 80

    (42) Condition -> Expr OR Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    IF              reduce using rule 42 (Condition -> Expr OR Expr .)
    WHILE           reduce using rule 42 (Condition -> Expr OR Expr .)
    REPEAT          reduce using rule 42 (Condition -> Expr OR Expr .)
    NAME            reduce using rule 42 (Condition -> Expr OR Expr .)
    PRINT           reduce using rule 42 (Condition -> Expr OR Expr .)
    $end            reduce using rule 42 (Condition -> Expr OR Expr .)
    }               reduce using rule 42 (Condition -> Expr OR Expr .)
    ]               reduce using rule 42 (Condition -> Expr OR Expr .)
    )               reduce using rule 42 (Condition -> Expr OR Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! +               [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! -               [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! *               [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! /               [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! %               [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! EQ              [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! NEQ             [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! >               [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! MOREEQ          [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! <               [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! LESSEQ          [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! AND             [ reduce using rule 42 (Condition -> Expr OR Expr .) ]
  ! OR              [ reduce using rule 42 (Condition -> Expr OR Expr .) ]


state 81

    (46) Variable -> NAME [ Expr . ]
    (47) Variable -> NAME [ Expr . ] [ Expr ]
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    ]               shift and go to state 90
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 82

    (43) Expr -> ( Expr ) .

    +               reduce using rule 43 (Expr -> ( Expr ) .)
    -               reduce using rule 43 (Expr -> ( Expr ) .)
    *               reduce using rule 43 (Expr -> ( Expr ) .)
    /               reduce using rule 43 (Expr -> ( Expr ) .)
    %               reduce using rule 43 (Expr -> ( Expr ) .)
    EQ              reduce using rule 43 (Expr -> ( Expr ) .)
    NEQ             reduce using rule 43 (Expr -> ( Expr ) .)
    >               reduce using rule 43 (Expr -> ( Expr ) .)
    MOREEQ          reduce using rule 43 (Expr -> ( Expr ) .)
    <               reduce using rule 43 (Expr -> ( Expr ) .)
    LESSEQ          reduce using rule 43 (Expr -> ( Expr ) .)
    AND             reduce using rule 43 (Expr -> ( Expr ) .)
    OR              reduce using rule 43 (Expr -> ( Expr ) .)
    IF              reduce using rule 43 (Expr -> ( Expr ) .)
    WHILE           reduce using rule 43 (Expr -> ( Expr ) .)
    REPEAT          reduce using rule 43 (Expr -> ( Expr ) .)
    NAME            reduce using rule 43 (Expr -> ( Expr ) .)
    PRINT           reduce using rule 43 (Expr -> ( Expr ) .)
    $end            reduce using rule 43 (Expr -> ( Expr ) .)
    }               reduce using rule 43 (Expr -> ( Expr ) .)
    ]               reduce using rule 43 (Expr -> ( Expr ) .)
    )               reduce using rule 43 (Expr -> ( Expr ) .)


state 83

    (44) Condition -> ( Condition ) .

    +               reduce using rule 44 (Condition -> ( Condition ) .)
    -               reduce using rule 44 (Condition -> ( Condition ) .)
    *               reduce using rule 44 (Condition -> ( Condition ) .)
    /               reduce using rule 44 (Condition -> ( Condition ) .)
    %               reduce using rule 44 (Condition -> ( Condition ) .)
    EQ              reduce using rule 44 (Condition -> ( Condition ) .)
    NEQ             reduce using rule 44 (Condition -> ( Condition ) .)
    >               reduce using rule 44 (Condition -> ( Condition ) .)
    MOREEQ          reduce using rule 44 (Condition -> ( Condition ) .)
    <               reduce using rule 44 (Condition -> ( Condition ) .)
    LESSEQ          reduce using rule 44 (Condition -> ( Condition ) .)
    AND             reduce using rule 44 (Condition -> ( Condition ) .)
    OR              reduce using rule 44 (Condition -> ( Condition ) .)
    IF              reduce using rule 44 (Condition -> ( Condition ) .)
    WHILE           reduce using rule 44 (Condition -> ( Condition ) .)
    REPEAT          reduce using rule 44 (Condition -> ( Condition ) .)
    NAME            reduce using rule 44 (Condition -> ( Condition ) .)
    PRINT           reduce using rule 44 (Condition -> ( Condition ) .)
    $end            reduce using rule 44 (Condition -> ( Condition ) .)
    }               reduce using rule 44 (Condition -> ( Condition ) .)
    ]               reduce using rule 44 (Condition -> ( Condition ) .)
    )               reduce using rule 44 (Condition -> ( Condition ) .)


state 84

    (8) Decl -> VAR NAME [ NUM ] .
    (9) Decl -> VAR NAME [ NUM ] . [ NUM ]

    VAR             reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    IF              reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    WHILE           reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    REPEAT          reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    NAME            reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    PRINT           reduce using rule 8 (Decl -> VAR NAME [ NUM ] .)
    [               shift and go to state 91


state 85

    (23) Assign -> NAME [ Expr ] [ . Expr ] = Value
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 92
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 86

    (22) Assign -> NAME [ Expr ] = . Expr
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 93
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 87

    (17) Conditions -> IF ( Condition ) THEN . { Code }
    (18) Conditions -> IF ( Condition ) THEN . { Code } OTHERWISE { Code }

    {               shift and go to state 94


state 88

    (19) WhileDo -> WHILE ( Condition ) DO . { Code }

    {               shift and go to state 95


state 89

    (20) RepeatUntil -> REPEAT { Code } UNTIL . ( Condition )

    (               shift and go to state 96


state 90

    (46) Variable -> NAME [ Expr ] .
    (47) Variable -> NAME [ Expr ] . [ Expr ]

    +               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    -               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    *               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    /               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    %               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    EQ              reduce using rule 46 (Variable -> NAME [ Expr ] .)
    NEQ             reduce using rule 46 (Variable -> NAME [ Expr ] .)
    >               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    MOREEQ          reduce using rule 46 (Variable -> NAME [ Expr ] .)
    <               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    LESSEQ          reduce using rule 46 (Variable -> NAME [ Expr ] .)
    AND             reduce using rule 46 (Variable -> NAME [ Expr ] .)
    OR              reduce using rule 46 (Variable -> NAME [ Expr ] .)
    IF              reduce using rule 46 (Variable -> NAME [ Expr ] .)
    WHILE           reduce using rule 46 (Variable -> NAME [ Expr ] .)
    REPEAT          reduce using rule 46 (Variable -> NAME [ Expr ] .)
    NAME            reduce using rule 46 (Variable -> NAME [ Expr ] .)
    PRINT           reduce using rule 46 (Variable -> NAME [ Expr ] .)
    $end            reduce using rule 46 (Variable -> NAME [ Expr ] .)
    }               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    ]               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    )               reduce using rule 46 (Variable -> NAME [ Expr ] .)
    [               shift and go to state 97


state 91

    (9) Decl -> VAR NAME [ NUM ] [ . NUM ]

    NUM             shift and go to state 98


state 92

    (23) Assign -> NAME [ Expr ] [ Expr . ] = Value
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    ]               shift and go to state 99
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 93

    (22) Assign -> NAME [ Expr ] = Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    IF              reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    WHILE           reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    REPEAT          reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    NAME            reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    PRINT           reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    $end            reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    }               reduce using rule 22 (Assign -> NAME [ Expr ] = Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 94

    (17) Conditions -> IF ( Condition ) THEN { . Code }
    (18) Conditions -> IF ( Condition ) THEN { . Code } OTHERWISE { Code }
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 100
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 95

    (19) WhileDo -> WHILE ( Condition ) DO { . Code }
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 101
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 96

    (20) RepeatUntil -> REPEAT { Code } UNTIL ( . Condition )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    !               shift and go to state 33
    (               shift and go to state 39
    NUM             shift and go to state 31
    NAME            shift and go to state 36

    Condition                      shift and go to state 102
    Expr                           shift and go to state 41
    Variable                       shift and go to state 30

state 97

    (47) Variable -> NAME [ Expr ] [ . Expr ]
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 103
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 98

    (9) Decl -> VAR NAME [ NUM ] [ NUM . ]

    ]               shift and go to state 104


state 99

    (23) Assign -> NAME [ Expr ] [ Expr ] . = Value

    =               shift and go to state 105


state 100

    (17) Conditions -> IF ( Condition ) THEN { Code . }
    (18) Conditions -> IF ( Condition ) THEN { Code . } OTHERWISE { Code }
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    }               shift and go to state 106
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 101

    (19) WhileDo -> WHILE ( Condition ) DO { Code . }
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    }               shift and go to state 107
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 102

    (20) RepeatUntil -> REPEAT { Code } UNTIL ( Condition . )
    (26) Expr -> Condition .

    )               shift and go to state 108
    EQ              reduce using rule 26 (Expr -> Condition .)
    NEQ             reduce using rule 26 (Expr -> Condition .)
    >               reduce using rule 26 (Expr -> Condition .)
    MOREEQ          reduce using rule 26 (Expr -> Condition .)
    <               reduce using rule 26 (Expr -> Condition .)
    LESSEQ          reduce using rule 26 (Expr -> Condition .)
    AND             reduce using rule 26 (Expr -> Condition .)
    OR              reduce using rule 26 (Expr -> Condition .)
    +               reduce using rule 26 (Expr -> Condition .)
    -               reduce using rule 26 (Expr -> Condition .)
    *               reduce using rule 26 (Expr -> Condition .)
    /               reduce using rule 26 (Expr -> Condition .)
    %               reduce using rule 26 (Expr -> Condition .)


state 103

    (47) Variable -> NAME [ Expr ] [ Expr . ]
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    ]               shift and go to state 109
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 104

    (9) Decl -> VAR NAME [ NUM ] [ NUM ] .

    VAR             reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    IF              reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    WHILE           reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    REPEAT          reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    NAME            reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)
    PRINT           reduce using rule 9 (Decl -> VAR NAME [ NUM ] [ NUM ] .)


state 105

    (23) Assign -> NAME [ Expr ] [ Expr ] = . Value
    (24) Value -> . Expr
    (25) Value -> . READ
    (26) Expr -> . Condition
    (27) Expr -> . Variable
    (28) Expr -> . NUM
    (29) Expr -> . Expr + Expr
    (30) Expr -> . Expr - Expr
    (31) Expr -> . Expr * Expr
    (32) Expr -> . Expr / Expr
    (33) Expr -> . Expr % Expr
    (43) Expr -> . ( Expr )
    (34) Condition -> . Expr EQ Expr
    (35) Condition -> . Expr NEQ Expr
    (36) Condition -> . ! Expr
    (37) Condition -> . Expr > Expr
    (38) Condition -> . Expr MOREEQ Expr
    (39) Condition -> . Expr < Expr
    (40) Condition -> . Expr LESSEQ Expr
    (41) Condition -> . Expr AND Expr
    (42) Condition -> . Expr OR Expr
    (44) Condition -> . ( Condition )
    (45) Variable -> . NAME
    (46) Variable -> . NAME [ Expr ]
    (47) Variable -> . NAME [ Expr ] [ Expr ]

    READ            shift and go to state 112
    NUM             shift and go to state 31
    (               shift and go to state 32
    !               shift and go to state 33
    NAME            shift and go to state 36

    Expr                           shift and go to state 110
    Value                          shift and go to state 111
    Condition                      shift and go to state 29
    Variable                       shift and go to state 30

state 106

    (17) Conditions -> IF ( Condition ) THEN { Code } .
    (18) Conditions -> IF ( Condition ) THEN { Code } . OTHERWISE { Code }

    IF              reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    WHILE           reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    REPEAT          reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    NAME            reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    PRINT           reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    $end            reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    }               reduce using rule 17 (Conditions -> IF ( Condition ) THEN { Code } .)
    OTHERWISE       shift and go to state 113


state 107

    (19) WhileDo -> WHILE ( Condition ) DO { Code } .

    IF              reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    WHILE           reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    REPEAT          reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    NAME            reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    PRINT           reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    $end            reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)
    }               reduce using rule 19 (WhileDo -> WHILE ( Condition ) DO { Code } .)


state 108

    (20) RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .

    IF              reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    WHILE           reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    REPEAT          reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    NAME            reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    PRINT           reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    $end            reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)
    }               reduce using rule 20 (RepeatUntil -> REPEAT { Code } UNTIL ( Condition ) .)


state 109

    (47) Variable -> NAME [ Expr ] [ Expr ] .

    +               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    -               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    *               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    /               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    %               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    EQ              reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    NEQ             reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    >               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    MOREEQ          reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    <               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    LESSEQ          reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    AND             reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    OR              reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    IF              reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    WHILE           reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    REPEAT          reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    NAME            reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    PRINT           reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    $end            reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    }               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    ]               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)
    )               reduce using rule 47 (Variable -> NAME [ Expr ] [ Expr ] .)


state 110

    (24) Value -> Expr .
    (29) Expr -> Expr . + Expr
    (30) Expr -> Expr . - Expr
    (31) Expr -> Expr . * Expr
    (32) Expr -> Expr . / Expr
    (33) Expr -> Expr . % Expr
    (34) Condition -> Expr . EQ Expr
    (35) Condition -> Expr . NEQ Expr
    (37) Condition -> Expr . > Expr
    (38) Condition -> Expr . MOREEQ Expr
    (39) Condition -> Expr . < Expr
    (40) Condition -> Expr . LESSEQ Expr
    (41) Condition -> Expr . AND Expr
    (42) Condition -> Expr . OR Expr

    IF              reduce using rule 24 (Value -> Expr .)
    WHILE           reduce using rule 24 (Value -> Expr .)
    REPEAT          reduce using rule 24 (Value -> Expr .)
    NAME            reduce using rule 24 (Value -> Expr .)
    PRINT           reduce using rule 24 (Value -> Expr .)
    $end            reduce using rule 24 (Value -> Expr .)
    }               reduce using rule 24 (Value -> Expr .)
    +               shift and go to state 44
    -               shift and go to state 45
    *               shift and go to state 46
    /               shift and go to state 47
    %               shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    >               shift and go to state 51
    MOREEQ          shift and go to state 52
    <               shift and go to state 53
    LESSEQ          shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56


state 111

    (23) Assign -> NAME [ Expr ] [ Expr ] = Value .

    IF              reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Value .)
    WHILE           reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Value .)
    REPEAT          reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Value .)
    NAME            reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Value .)
    PRINT           reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Value .)
    $end            reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Value .)
    }               reduce using rule 23 (Assign -> NAME [ Expr ] [ Expr ] = Value .)


state 112

    (25) Value -> READ .

    IF              reduce using rule 25 (Value -> READ .)
    WHILE           reduce using rule 25 (Value -> READ .)
    REPEAT          reduce using rule 25 (Value -> READ .)
    NAME            reduce using rule 25 (Value -> READ .)
    PRINT           reduce using rule 25 (Value -> READ .)
    $end            reduce using rule 25 (Value -> READ .)
    }               reduce using rule 25 (Value -> READ .)


state 113

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE . { Code }

    {               shift and go to state 114


state 114

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { . Code }
    (10) Code -> . Code Codes
    (11) Code -> . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Code                           shift and go to state 115
    Codes                          shift and go to state 5
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 115

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code . }
    (10) Code -> Code . Codes
    (12) Codes -> . Conditions
    (13) Codes -> . WhileDo
    (14) Codes -> . RepeatUntil
    (15) Codes -> . Assign
    (16) Codes -> . Print
    (17) Conditions -> . IF ( Condition ) THEN { Code }
    (18) Conditions -> . IF ( Condition ) THEN { Code } OTHERWISE { Code }
    (19) WhileDo -> . WHILE ( Condition ) DO { Code }
    (20) RepeatUntil -> . REPEAT { Code } UNTIL ( Condition )
    (21) Assign -> . NAME = Expr
    (22) Assign -> . NAME [ Expr ] = Expr
    (23) Assign -> . NAME [ Expr ] [ Expr ] = Value
    (48) Print -> . PRINT Expr
    (49) Print -> . PRINT NAME

    }               shift and go to state 116
    IF              shift and go to state 13
    WHILE           shift and go to state 14
    REPEAT          shift and go to state 15
    NAME            shift and go to state 7
    PRINT           shift and go to state 16

    Codes                          shift and go to state 19
    Conditions                     shift and go to state 8
    WhileDo                        shift and go to state 9
    RepeatUntil                    shift and go to state 10
    Assign                         shift and go to state 11
    Print                          shift and go to state 12

state 116

    (18) Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .

    IF              reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    WHILE           reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    REPEAT          reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    NAME            reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    PRINT           reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    $end            reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)
    }               reduce using rule 18 (Conditions -> IF ( Condition ) THEN { Code } OTHERWISE { Code } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ) in state 59 resolved as shift
WARNING: shift/reduce conflict for + in state 60 resolved as shift
WARNING: shift/reduce conflict for - in state 60 resolved as shift
WARNING: shift/reduce conflict for * in state 60 resolved as shift
WARNING: shift/reduce conflict for / in state 60 resolved as shift
WARNING: shift/reduce conflict for % in state 60 resolved as shift
WARNING: shift/reduce conflict for EQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for > in state 60 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for < in state 60 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for + in state 68 resolved as shift
WARNING: shift/reduce conflict for - in state 68 resolved as shift
WARNING: shift/reduce conflict for * in state 68 resolved as shift
WARNING: shift/reduce conflict for / in state 68 resolved as shift
WARNING: shift/reduce conflict for % in state 68 resolved as shift
WARNING: shift/reduce conflict for EQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for > in state 68 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for < in state 68 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for + in state 69 resolved as shift
WARNING: shift/reduce conflict for - in state 69 resolved as shift
WARNING: shift/reduce conflict for * in state 69 resolved as shift
WARNING: shift/reduce conflict for / in state 69 resolved as shift
WARNING: shift/reduce conflict for % in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for > in state 69 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for < in state 69 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for + in state 70 resolved as shift
WARNING: shift/reduce conflict for - in state 70 resolved as shift
WARNING: shift/reduce conflict for * in state 70 resolved as shift
WARNING: shift/reduce conflict for / in state 70 resolved as shift
WARNING: shift/reduce conflict for % in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for > in state 70 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for < in state 70 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for + in state 71 resolved as shift
WARNING: shift/reduce conflict for - in state 71 resolved as shift
WARNING: shift/reduce conflict for * in state 71 resolved as shift
WARNING: shift/reduce conflict for / in state 71 resolved as shift
WARNING: shift/reduce conflict for % in state 71 resolved as shift
WARNING: shift/reduce conflict for EQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for > in state 71 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for < in state 71 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for + in state 72 resolved as shift
WARNING: shift/reduce conflict for - in state 72 resolved as shift
WARNING: shift/reduce conflict for * in state 72 resolved as shift
WARNING: shift/reduce conflict for / in state 72 resolved as shift
WARNING: shift/reduce conflict for % in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for > in state 72 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for < in state 72 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for + in state 73 resolved as shift
WARNING: shift/reduce conflict for - in state 73 resolved as shift
WARNING: shift/reduce conflict for * in state 73 resolved as shift
WARNING: shift/reduce conflict for / in state 73 resolved as shift
WARNING: shift/reduce conflict for % in state 73 resolved as shift
WARNING: shift/reduce conflict for EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for > in state 73 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for < in state 73 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for + in state 74 resolved as shift
WARNING: shift/reduce conflict for - in state 74 resolved as shift
WARNING: shift/reduce conflict for * in state 74 resolved as shift
WARNING: shift/reduce conflict for / in state 74 resolved as shift
WARNING: shift/reduce conflict for % in state 74 resolved as shift
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for > in state 74 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for < in state 74 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for + in state 75 resolved as shift
WARNING: shift/reduce conflict for - in state 75 resolved as shift
WARNING: shift/reduce conflict for * in state 75 resolved as shift
WARNING: shift/reduce conflict for / in state 75 resolved as shift
WARNING: shift/reduce conflict for % in state 75 resolved as shift
WARNING: shift/reduce conflict for EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for > in state 75 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for < in state 75 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for + in state 76 resolved as shift
WARNING: shift/reduce conflict for - in state 76 resolved as shift
WARNING: shift/reduce conflict for * in state 76 resolved as shift
WARNING: shift/reduce conflict for / in state 76 resolved as shift
WARNING: shift/reduce conflict for % in state 76 resolved as shift
WARNING: shift/reduce conflict for EQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for > in state 76 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for < in state 76 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for + in state 77 resolved as shift
WARNING: shift/reduce conflict for - in state 77 resolved as shift
WARNING: shift/reduce conflict for * in state 77 resolved as shift
WARNING: shift/reduce conflict for / in state 77 resolved as shift
WARNING: shift/reduce conflict for % in state 77 resolved as shift
WARNING: shift/reduce conflict for EQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for > in state 77 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for < in state 77 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for + in state 78 resolved as shift
WARNING: shift/reduce conflict for - in state 78 resolved as shift
WARNING: shift/reduce conflict for * in state 78 resolved as shift
WARNING: shift/reduce conflict for / in state 78 resolved as shift
WARNING: shift/reduce conflict for % in state 78 resolved as shift
WARNING: shift/reduce conflict for EQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for > in state 78 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for < in state 78 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for + in state 79 resolved as shift
WARNING: shift/reduce conflict for - in state 79 resolved as shift
WARNING: shift/reduce conflict for * in state 79 resolved as shift
WARNING: shift/reduce conflict for / in state 79 resolved as shift
WARNING: shift/reduce conflict for % in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for > in state 79 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for < in state 79 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for + in state 80 resolved as shift
WARNING: shift/reduce conflict for - in state 80 resolved as shift
WARNING: shift/reduce conflict for * in state 80 resolved as shift
WARNING: shift/reduce conflict for / in state 80 resolved as shift
WARNING: shift/reduce conflict for % in state 80 resolved as shift
WARNING: shift/reduce conflict for EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for > in state 80 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for < in state 80 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (Variable -> NAME)
WARNING: rejected rule (Print -> PRINT NAME) in state 28
WARNING: Rule (Print -> PRINT NAME) is never reduced
